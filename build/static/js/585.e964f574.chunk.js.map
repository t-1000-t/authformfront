{"version":3,"file":"static/js/585.e964f574.chunk.js","mappings":"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","sources":["pages/Cv/components/Modal/ModalEdit.jsx","utils/hooks/useModalEdit.jsx","utils/hooks/useDetectChange.jsx","services/customStyles.js","pages/Cv/components/Title.jsx","services/getFirstBigLetter.js","services/listItems.jsx","pages/Cv/components/Contacts.jsx","pages/Cv/components/Education.jsx","services/getObjectNoId.js","pages/Cv/components/Skills.jsx","pages/Cv/components/PetInProgress.jsx","pages/Cv/components/PetsOlds.jsx","pages/Cv/Wrappers/A4Container.jsx","pages/Cv/Wrappers/CardWrap.jsx","pages/Cv/components/SendData.jsx","pages/Cv/components/Competencies.jsx","pages/Cv/components/Cv.jsx","pages/Cv/components/CvPagePdf.jsx","pages/Cv/Wrappers/GeneratePdf.jsx","pages/Cv/index.jsx","services/promiseBasedToast.jsx"],"sourcesContent":["import React from 'react'\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react'\n\nconst ModalEdit = ({ isOpen, onClose, onSubmit, text, onChange, initialRef }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} initialFocusRef={initialRef} scrollBehavior=\"inside\">\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Type your details</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          {Object.keys(text).map((item, index) => {\n            return (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <FormControl key={index}>\n                <FormLabel>{item.charAt(0) + item.slice(1)}</FormLabel>\n                <Input\n                  name={item}\n                  value={text[item] || ''} // dynamically bind the value\n                  ref={index === 0 ? initialRef : null} // focus first field\n                  placeholder={item}\n                  onChange={onChange}\n                />\n              </FormControl>\n            )\n          })}\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onSubmit}>\n            OK\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ModalEdit\n","import { useCallback, useState } from 'react'\n\nconst useModalEdit = (initialText) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [text, setText] = useState(initialText)\n\n  const onOpen = useCallback(() => {\n    setText(initialText)\n    setIsOpen(true)\n  }, [initialText])\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    setText(initialText)\n  }, [initialText])\n\n  const onChange = useCallback((e, activeIndex) => {\n    const { name, value } = e.target\n    setText((prev) =>\n      !Array.isArray(prev)\n        ? { ...prev, [name]: value }\n        : prev.map((elem, idx) => (activeIndex === idx ? { ...elem, [name]: value } : elem)),\n    )\n  }, [])\n\n  return {\n    isOpen,\n    text,\n    onOpen,\n    onClose,\n    onChange,\n    setText,\n  }\n}\n\nexport default useModalEdit\n","import { useEffect } from 'react'\nimport { isEqual } from 'lodash'\nimport useAuthStore from '../../store/useAuthStore'\n\nconst useDetectChange = () => {\n  const { currentData, setHasChanged, cv } = useAuthStore()\n\n  useEffect(() => {\n    if (currentData.section === 'strPet') {\n      const currentPet = cv?.user?.newData?.pet ?? {}\n      const changed = !isEqual(currentData.localData, currentPet)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strEducation') {\n      const currentEducation = cv?.user?.newData?.education ?? {}\n      const changed = !isEqual(currentData.localData, currentEducation)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strContacts') {\n      const currentContacts = cv?.user?.newData?.contacts ?? {}\n      const changed = !isEqual(currentData.localData, currentContacts)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strTitles') {\n      const currentTitles = cv?.user?.newData?.title ?? {}\n      const changed = !isEqual(currentData.localData, currentTitles)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strSkills') {\n      const currentSkills = cv?.user?.newData?.skills ?? []\n      const changed = !isEqual(currentData.localData, currentSkills)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strCompetencies') {\n      const currentCompetencies = cv?.user?.newData?.competencies ?? []\n      const changed = !isEqual(currentData.localData, currentCompetencies)\n      setHasChanged(changed)\n    }\n  }, [currentData, cv?.user?.newData])\n}\n\nexport default useDetectChange\n","const styleButton = {\n  borderRadius: 'full',\n  w: '40px',\n  h: '40px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  border: '2px',\n  borderColor: 'gray.300',\n  shadow: 'md',\n}\n\nexport default styleButton\n","import React, { useRef } from 'react'\nimport { Box, Button, Flex, Heading } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport ModalEdit from './Modal/ModalEdit'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Title = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const initialRef = useRef(null)\n  const { title } = cv.user.newData\n\n  const { isOpen, text, onOpen, onClose, onChange } = useModalEdit(title)\n\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!text.posname || !text.fullname) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      const updatedTitles = cv.user.newData.title\n      setCurrentData({ section: 'strTitles', localData: updatedTitles })\n      onClose()\n    })\n  }\n\n  return (\n    <Box mb=\"20px\">\n      <Flex mb=\"20px\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n        <Box>\n          <Heading as=\"h1\" fontSize=\"24px\" fontWeight=\"bold\" mb=\"10px\">\n            {title.posname}\n          </Heading>\n          <Heading as=\"h2\" fontSize=\"22px\" fontWeight=\"bold\">\n            {title.fullname}\n          </Heading>\n        </Box>\n        <Button sx={styleButton} m={3} size=\"sx\" onClick={onOpen} bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n\n        <ModalEdit\n          isOpen={isOpen}\n          onClose={onClose}\n          onSubmit={handleSubmit}\n          text={text}\n          onChange={onChange}\n          initialRef={initialRef}\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Title\n","const getFirstBigLetter = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport default getFirstBigLetter\n","import React from 'react'\nimport { Text } from '@chakra-ui/react'\nimport getFirstBigLetter from './getFirstBigLetter'\n\nconst listItems = (obj) => {\n  if (!obj) return () => {}\n  return Object.entries(obj).map(([name, value]) => {\n    let displayValue = value\n\n    // Make emails clickable\n    if (name.toLowerCase().includes('email') || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      displayValue = (\n        <a href={`mailto:${value}`} style={{ color: 'blue', textDecoration: 'underline' }}>\n          {value}\n        </a>\n      )\n    }\n\n    // Make links clickable\n    if (name.toLowerCase().includes('linkedin')) {\n      displayValue = (\n        <a\n          href={`https://linkedin.com/in/${value}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: 'blue', textDecoration: 'underline' }}\n        >\n          {value}\n        </a>\n      )\n    }\n\n    // Make links clickable\n    if (name.toLowerCase().includes('own')) {\n      displayValue = (\n        <a\n          href={`https://${value}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: 'blue', textDecoration: 'underline' }}\n        >\n          {value}\n        </a>\n      )\n    }\n\n    return (\n      <Text key={name} mb=\"5px\">\n        <Text as=\"span\">\n          <i>{getFirstBigLetter(name)}</i>\n        </Text>\n        :&nbsp;{displayValue}\n      </Text>\n    )\n  })\n}\n\nexport default listItems\n","import React, { useRef } from 'react'\nimport { Box, Button, Flex, Image } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport ModalEdit from './Modal/ModalEdit'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Contacts = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const initialRef = useRef(null)\n  const { contacts } = cv.user.newData\n  const { onClose, onOpen, onChange, text, isOpen } = useModalEdit(contacts)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!text.email || !text.linkedin || !text.location || !text.languages) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strContacts', localData: contacts })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\" mt=\"20px\">\n      <Flex>\n        <Box>{listItems(contacts)}</Box>\n        <ModalEdit\n          onSubmit={handleSubmit}\n          onChange={onChange}\n          onClose={onClose}\n          text={text}\n          isOpen={isOpen}\n          initialRef={initialRef}\n        />\n        <Button sx={styleButton} size=\"sx\" mt={4} onClick={onOpen} bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n      </Flex>\n      {/* Right Column - Image */}\n      <Box>\n        <Image\n          src=\"/images/I_19.jpg\"\n          alt=\"Vlad\"\n          maxWidth=\"280px\"\n          height=\"auto\"\n          border=\"1px solid\"\n          borderColor=\"gray.200\"\n        />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Contacts\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport ModalEdit from './Modal/ModalEdit'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Education = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const { education } = cv.user.newData\n  const { onClose, onOpen, onChange, text, isOpen } = useModalEdit(education)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!education.diploma || !education.course) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strEducation', localData: education })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Education:\n      </Text>\n      <Flex>\n        <Box>\n          <Box>{listItems(education)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Education\n","const getObjectNoId = (item) => {\n  return Object.keys(item)\n    .filter((f) => f !== '_id' && f !== 'id')\n    .reduce((obj, key) => ({ ...obj, [key]: item[key] }), {})\n}\n\nexport default getObjectNoId\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { MdOutlineNoteAdd, MdEditNote, MdOutlineDeleteForever } from 'react-icons/md'\nimport { Box, Button, Flex, Text, useToast } from '@chakra-ui/react'\nimport { isArray } from 'lodash'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport ModalEdit from './Modal/ModalEdit'\nimport getObjectNoId from '../../../services/getObjectNoId'\nimport { logError } from '../../../utils/services'\nimport styleButton from '../../../services/customStyles'\nimport { promiseBasedToastDel } from '../../../services/promiseBasedToast'\n\nconst Skills = () => {\n  const { putCvInfo, cv, deleteSkillFromCv, setCurrentData } = useAuthStore()\n  const { skills } = cv.user.newData\n  const toast = useToast({ position: 'top-right' })\n  const initialRef = useRef(null)\n  const [activeIndex, setActiveIndex] = useState(null)\n  const [boilerplateObj] = useState({\n    company: '...',\n    task: '...',\n    technologies: '...',\n    responsibilities: '...',\n  })\n  const [localSkills, setLocalSkills] = useState([...skills])\n\n  const { text, onClose, onOpen, onChange, isOpen } = useModalEdit(localSkills)\n\n  useDetectChange() // tracks currentData vs cv.user.newData.skills\n\n  const handleSubmit = () => {\n    const current = text[activeIndex]\n    if (!current.company || !current.task || !current.responsibilities || !current.technologies) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      const updatedSkills = cv.user.newData.skills\n      setCurrentData({ section: 'strSkills', localData: updatedSkills })\n      onClose()\n    })\n  }\n\n  const handleEditClick = (index) => {\n    setActiveIndex(index)\n    onOpen()\n  }\n\n  const handleAddClick = () => {\n    const updateSkills = [...localSkills, boilerplateObj]\n\n    setLocalSkills(updateSkills)\n  }\n\n  const handleDelClick = useCallback(\n    (skill, index) => {\n      const getCheckCurrentData = () => {\n        const newSkills = (prev) => prev.filter((_, i) => i !== index)\n        setLocalSkills(newSkills)\n        setCurrentData({ section: 'strSkills', localData: newSkills })\n      }\n\n      if (skill._id) {\n        const { _id, email } = cv.user\n        try {\n          const promise = deleteSkillFromCv(_id, skill._id, email).then((result) => {\n            if (!result) {\n              return Promise.reject(new Error('Invalid response from server'))\n            }\n            return result\n          })\n          promiseBasedToastDel(toast, promise)\n\n          logError('Skill deleted')\n        } catch (error) {\n          logError(error('Error deleting skill', error))\n        }\n      } else {\n        getCheckCurrentData()\n      }\n    },\n    [cv.user, deleteSkillFromCv],\n  )\n\n  useEffect(() => {\n    // if something change with skills we put into the store before it works UI only\n    if (isArray(skills)) {\n      setLocalSkills(skills[0])\n    }\n    setLocalSkills(skills)\n    if (activeIndex === null) {\n      setCurrentData({ section: 'strSkills', localData: skills })\n    }\n  }, [skills])\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Flex direction=\"column\">\n        <Text as=\"b\" fontSize=\"larger\" pb=\"20px\">\n          Commercial Experience:\n        </Text>\n      </Flex>\n\n      {activeIndex !== null && (\n        <ModalEdit\n          isOpen={isOpen}\n          text={getObjectNoId(text[activeIndex])}\n          onSubmit={handleSubmit}\n          onChange={(e) => onChange(e, activeIndex)}\n          onClose={() => {\n            setActiveIndex(null)\n            onClose()\n          }}\n          initialRef={initialRef}\n        />\n      )}\n      {localSkills.map((item, index) => {\n        const objNoId = getObjectNoId(item)\n\n        return (\n          <Box key={item._id}>\n            <Flex>\n              <Box>{listItems(objNoId)}</Box>\n              <Button sx={styleButton} size=\"sx\" onClick={() => handleEditClick(index)} bg=\"yellow.50\">\n                <MdEditNote />\n              </Button>\n              <Button sx={styleButton} bg=\"green.50\" p={2} size=\"sx\" onClick={() => handleAddClick(index)}>\n                <MdOutlineNoteAdd />\n              </Button>\n              <Button sx={styleButton} bg=\"red.50\" p={2} size=\"sx\" onClick={() => handleDelClick(item, index)}>\n                <MdOutlineDeleteForever />\n              </Button>\n            </Flex>\n          </Box>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport listItems from '../../../services/listItems'\nimport ModalEdit from './Modal/ModalEdit'\nimport styleButton from '../../../services/customStyles'\n\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\n\nconst PetInProgress = () => {\n  const { cv, putCvInfo, setCurrentData } = useAuthStore()\n  const { pet } = cv.user.newData\n  const { isOpen, onClose, onChange, text, onOpen } = useModalEdit(pet)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!pet.task || !pet.technologies || !pet.own || !pet.responsibilities) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strPet', localData: pet })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Pet-project:\n      </Text>\n      <Flex>\n        <Box>\n          <Box>{listItems(pet)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PetInProgress\n","import React from 'react'\nimport { Text } from '@chakra-ui/react'\n\nconst PetsOlds = () => {\n  return (\n    <Text pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\">\n        PET-Projects not in progress\n      </Text>\n      &nbsp;(In Progress):\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Integral-shop\n      </Text>\n      :&nbsp;https://integral-bootstrap-redux.netlify.app\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Task\n      </Text>\n      :&nbsp;Create shop from scratch.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Technologies\n      </Text>\n      :&nbsp;Node.js (Express), Bootstrap, Redux, React Hooks, MongoDB, Netlify, Heroku.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Responsibilities\n      </Text>\n      :&nbsp;Develop store structure, design, accessibility, responsive, routing, sorting, product filter, global\n      search, feedback form.\n      <br />\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Craft-House\n      </Text>\n      :&nbsp;https://craft-house.netlify.app/ // React Classic\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Task\n      </Text>\n      :&nbsp;SPA (Lending)\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Technologies\n      </Text>\n      :&nbsp;React, Module CSS, MongoDB, Netlify.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Responsibilities\n      </Text>\n      :&nbsp;Design, Modal window f or filling and save form in database.\n      <br />\n      https://t1001t-goit-react-hw-04-movies.netlify.app/ // search movies rank // React classic\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Task\n      </Text>\n      :&nbsp;Site movie, navigation bar for page, search movie, page details for movie, button “Go to back” previous\n      page.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Technologies\n      </Text>\n      :&nbsp;React JS, Module CSS, Netlify CLI, API the movie db.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Responsibilities\n      </Text>\n      :&nbsp;Create pages for site, navigation bar, search movie, page details, button push local storage, React\n      Routing.\n      <br />\n      https://f inder-images-on-react.netlify.app/ // React classic search photo animals, car, dog, bird, cat, etc.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Task\n      </Text>\n      :&nbsp;Site search images, create card, modal page.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Technologies\n      </Text>\n      :&nbsp;React JS, Module CSS, Netlify CLI, API pixabay.\n      <br />\n      <Text as=\"samp\" fontSize=\"large\">\n        Responsibilities\n      </Text>\n      :&nbsp; Page, Rendering Card, Modal page\n    </Text>\n  )\n}\n\nexport default PetsOlds\n","import React from 'react'\nimport { Container } from '@chakra-ui/react'\n\nconst A4Container = ({ children }) => {\n  return (\n    <Container maxW=\"794px\" minH=\"1123px\" p={0} bg=\"white\">\n      {children}\n    </Container>\n  )\n}\n\nexport default A4Container\n","import React from 'react'\nimport { Flex } from '@chakra-ui/react'\n\nconst CardWrap = ({ children }) => {\n  return (\n    <Flex\n      direction=\"column\"\n      maxW=\"210mm\" // A4 width\n      minH=\"297mm\" // A4 height\n      boxShadow=\"md\" // Optional: add shadow for paper-like effect\n      bg=\"blue.50\"\n      align=\"center\"\n      justify=\"left\"\n      spacing=\"20px\" // Add some spacing between items\n      pl={20}\n      pr={10} // Add some padding right\n      pt={15} // Add some padding top\n      pb={15} // Add some padding bottom\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default CardWrap\n","import React from 'react'\nimport { Button, Flex, Text, Tooltip, useToast, VStack } from '@chakra-ui/react'\nimport Lottie from 'react-lottie-player'\nimport { promiseBasedToast } from '../../../services/promiseBasedToast'\nimport useAuthStore from '../../../store/useAuthStore'\nimport { logError } from '../../../utils/services'\nimport done from '../../../animations/done.json'\n\nconst SendData = () => {\n  const toast = useToast({ position: 'top-right' })\n  const { accessToken, cv, user, pushCvText, hasChanged } = useAuthStore()\n\n  const handlerSendData = async (e) => {\n    e.preventDefault()\n\n    if (!accessToken) {\n      logError('Access token not available')\n      return\n    }\n\n    try {\n      const promise = pushCvText({ newData: cv.user.newData, email: user?.userData.email }).then((result) => {\n        // Search if result is valid\n        if (!result || !result.data) {\n          return Promise.reject(new Error('Invalid response from server'))\n        }\n        return result\n      })\n      promiseBasedToast(toast, promise)\n\n      logError('Note sent successfully')\n    } catch (error) {\n      logError(error)\n    }\n  }\n\n  return (\n    <VStack spacing={3} align=\"stretch\">\n      <Flex justify=\"space-between\">\n        <Text>Save CV</Text>\n        <Tooltip label={!hasChanged && 'Any text must be changed before saving!'} placement=\"left-start\">\n          <Button\n            colorScheme=\"blue\"\n            onClick={handlerSendData}\n            isDisabled={!hasChanged}\n            rightIcon={\n              hasChanged && <Lottie loop animationData={done} play={hasChanged} style={{ width: 50, height: 50 }} />\n            }\n          >\n            Save\n          </Button>\n        </Tooltip>\n      </Flex>\n    </VStack>\n  )\n}\n\nexport default SendData\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport ModalEdit from './Modal/ModalEdit'\nimport listItems from '../../../services/listItems'\nimport styleButton from '../../../services/customStyles'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\n\nconst Competencies = () => {\n  const { cv, putCvInfo, setCurrentData } = useAuthStore()\n  const { competencies } = cv.user.newData\n  // const [boilerplateObj] = useState({\n  //   languages: '...',\n  //   ide: '...',\n  //   vcs: '...',\n  //   platform: '...',\n  //   tracking: '...',\n  //   db: '...',\n  //   technologies: '...',\n  // })\n  const { text, onClose, onOpen, onChange, isOpen } = useModalEdit(competencies)\n\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (\n      !competencies.languages ||\n      !competencies.ide ||\n      !competencies.vcs ||\n      !competencies.platform ||\n      !competencies.tracking ||\n      !competencies.db ||\n      !competencies.technologies\n    ) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strCompetencies', localData: competencies })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Competencies:\n      </Text>\n      <Flex>\n        <Box>\n          <Box>{listItems(competencies)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Competencies\n","import React, { useEffect } from 'react'\nimport Title from './Title'\nimport Contacts from './Contacts'\nimport Education from './Education'\nimport Skills from './Skills'\nimport PetInProgress from './PetInProgress'\nimport PetsOlds from './PetsOlds'\n\nimport A4Container from '../Wrappers/A4Container'\nimport CardWrap from '../Wrappers/CardWrap'\nimport SendData from './SendData'\nimport useAuthStore from '../../../store/useAuthStore'\nimport Competencies from './Competencies'\n\nconst Cv = () => {\n  const { user, getCvInfo } = useAuthStore()\n  const { email } = user.userData\n\n  useEffect(() => {\n    getCvInfo(email).then()\n  }, [])\n\n  return (\n    <A4Container>\n      <SendData />\n      <Title />\n      <CardWrap>\n        <Contacts />\n        <Education />\n        <Competencies />\n        <PetInProgress />\n        <Skills />\n        <PetsOlds />\n      </CardWrap>\n    </A4Container>\n  )\n}\n\nexport default Cv\n","import React from 'react'\nimport { Box, Button } from '@chakra-ui/react'\nimport useAuthStore from '../../../store/useAuthStore'\nimport { logError } from '../../../utils/services'\n\nconst CvPagePdf = () => {\n  const { cvPdfUp } = useAuthStore()\n\n  const handlerUrl = async () => {\n    try {\n      const blob = await cvPdfUp({ url: `${process.env.REACT_APP_API}/cv` }) // just the payload\n      const pdfUrl = window.URL.createObjectURL(new Blob([blob], { type: 'application/pdf' }))\n\n      // Automatically download the PDF\n      const a = document.createElement('a')\n      a.href = pdfUrl\n      a.download = 'cv.pdf'\n      a.click()\n      a.remove()\n    } catch (error) {\n      logError('PDF response error:', error)\n    }\n  }\n\n  return (\n    <Box>\n      <Button onClick={handlerUrl}>PDF</Button>\n    </Box>\n  )\n}\n\nexport default CvPagePdf\n","import React, { useRef } from 'react'\nimport html2pdf from 'html2pdf.js'\nimport { Box, Button, Flex } from '@chakra-ui/react'\nimport CvPagePdf from '../components/CvPagePdf'\n\nconst GeneratePdf = ({ children }) => {\n  const cvRef = useRef()\n\n  const generatePdf = () => {\n    const element = cvRef.current\n\n    const opt = {\n      margin: 0.5,\n      filename: 'my_cv.pdf',\n      image: { type: 'jpeg', quality: 0.98 },\n      html2canvas: { scale: 2 },\n      jsPDF: { unit: 'in', format: 'a4', orientation: 'portrait' },\n      pagebreak: { mode: ['avoid-all', 'css', 'legacy'] },\n    }\n\n    html2pdf().set(opt).from(element).save()\n  }\n\n  return (\n    <Box p={4}>\n      <Flex justify=\"space-between\">\n        <Button colorScheme=\"teal\" onClick={generatePdf}>\n          Download PDF\n        </Button>\n        <CvPagePdf />\n      </Flex>\n      <Box ref={cvRef} mt={4}>\n        {children}\n      </Box>\n    </Box>\n  )\n}\n\nexport default GeneratePdf\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport Cv from './components/Cv'\nimport GeneratePdf from './Wrappers/GeneratePdf'\nimport Container from '../../layouts/Container'\nimport useAuthStore from '../../store/useAuthStore'\n\nconst CvDefault = () => {\n  const { accessToken } = useAuthStore()\n  return (\n    <GeneratePdf>\n      {accessToken ? (\n        <Cv />\n      ) : (\n        <Container>\n          <Box>Form of CV are available only to logged-in users.</Box>\n        </Container>\n      )}\n    </GeneratePdf>\n  )\n}\n\nexport default CvDefault\n","const promiseBasedToast = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Saving...', description: 'Please wait' },\n    success: { title: 'It has saved!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to save', description: 'Something went wrong.' },\n  })\n}\n\nconst promiseBasedToastDel = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Deleting...', description: 'Please wait' },\n    success: { title: 'It has deleted!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to delete', description: 'Something went wrong.' },\n  })\n}\n\nexport { promiseBasedToast, promiseBasedToastDel }\n"],"names":["_ref","isOpen","onClose","onSubmit","text","onChange","initialRef","_jsxs","Modal","initialFocusRef","scrollBehavior","children","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","pb","Object","keys","map","item","index","FormControl","FormLabel","charAt","slice","Input","name","value","ref","placeholder","ModalFooter","Button","colorScheme","mr","onClick","initialText","setIsOpen","useState","setText","onOpen","useCallback","e","activeIndex","target","prev","Array","isArray","elem","idx","_objectSpread","useDetectChange","_cv$user7","currentData","setHasChanged","cv","useAuthStore","useEffect","section","_cv$user$newData$pet","_cv$user","_cv$user$newData","currentPet","user","newData","pet","changed","isEqual","localData","_cv$user$newData$educ","_cv$user2","_cv$user2$newData","currentEducation","education","_cv$user$newData$cont","_cv$user3","_cv$user3$newData","currentContacts","contacts","_cv$user$newData$titl","_cv$user4","_cv$user4$newData","currentTitles","title","_cv$user$newData$skil","_cv$user5","_cv$user5$newData","currentSkills","skills","_cv$user$newData$comp","_cv$user6","_cv$user6$newData","currentCompetencies","competencies","borderRadius","w","h","display","alignItems","justifyContent","border","borderColor","shadow","Title","putCvInfo","setCurrentData","useRef","useModalEdit","Box","mb","Flex","Heading","as","fontSize","fontWeight","posname","fullname","sx","styleButton","m","size","bg","_hover","MdEditNote","ModalEdit","handleSubmit","then","updatedTitles","str","toUpperCase","obj","entries","displayValue","toLowerCase","includes","test","href","concat","style","color","textDecoration","rel","Text","getFirstBigLetter","Contacts","mt","listItems","email","linkedin","location","languages","Image","src","alt","maxWidth","height","Education","direction","pt","diploma","course","filter","f","reduce","key","Skills","deleteSkillFromCv","toast","useToast","position","setActiveIndex","boilerplateObj","company","task","technologies","responsibilities","localSkills","setLocalSkills","handleDelClick","skill","_id","promise","result","Promise","reject","Error","promiseBasedToastDel","logError","error","getCheckCurrentData","newSkills","_","i","getObjectNoId","current","updatedSkills","objNoId","handleEditClick","p","handleAddClick","updateSkills","MdOutlineNoteAdd","MdOutlineDeleteForever","PetInProgress","own","PetsOlds","Container","maxW","minH","boxShadow","align","justify","spacing","pl","pr","SendData","accessToken","pushCvText","hasChanged","VStack","Tooltip","label","placement","async","preventDefault","userData","data","promiseBasedToast","isDisabled","rightIcon","Lottie","loop","animationData","done","play","width","Competencies","ide","vcs","platform","tracking","db","Cv","getCvInfo","A4Container","CardWrap","CvPagePdf","cvPdfUp","blob","url","process","pdfUrl","window","URL","createObjectURL","Blob","type","a","document","createElement","download","click","remove","cvRef","generatePdf","element","html2pdf","set","margin","filename","image","quality","html2canvas","scale","jsPDF","unit","format","orientation","pagebreak","mode","from","save","CvDefault","GeneratePdf","loading","description","success"],"sourceRoot":""}