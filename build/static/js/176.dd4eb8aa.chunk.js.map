{"version":3,"file":"static/js/176.dd4eb8aa.chunk.js","mappings":"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","sources":["pages/Signup/components/AlertSignUp.js","pages/Signup/components/SignupForm.js","pages/Signup/index.js"],"sourcesContent":["import { Box, Flex } from '@chakra-ui/react'\r\nimport Lottie from 'react-lottie-player'\r\n\r\nimport sendLetter2 from '../../../animations/sendLetter2.json'\r\nimport sendUnSuccess from '../../../animations/sendUnsuccess.json'\r\n\r\nconst AlertSignUp = ({ status }) => {\r\n  const result = status ? sendLetter2 : sendUnSuccess\r\n\r\n  return (\r\n    <Box\r\n      bg=\"green.100\"\r\n      w=\"10xl\"\r\n      py={8}\r\n      px={4}\r\n      rounded=\"md\"\r\n      mt={4} // Adjusted the margin from mt={32} to mt={4}\r\n      shadow=\"lg\"\r\n      position=\"fixed\" // Changed position to \"fixed\"\r\n      top={0} // Positioned at the top of the viewport\r\n      right={5} // Positioned at the right of the viewport\r\n    >\r\n      <Flex>\r\n        <Box h={48} w={48} align=\"center\">\r\n          <Lottie animationData={result} loop={true} play />\r\n        </Box>\r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AlertSignUp\r\n","import { useState } from 'react'\r\n// import { useLocation } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { motion } from 'framer-motion'\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  chakra,\r\n  CloseButton,\r\n  Flex,\r\n  FormControl,\r\n  FormHelperText,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n  InputRightElement,\r\n  Stack,\r\n  Text,\r\n  useToast,\r\n} from '@chakra-ui/react'\r\nimport useAuthStore from 'store/useAuthStore'\r\n\r\nimport { IoIosArrowRoundBack } from 'react-icons/io'\r\nimport { FaUserAlt, FaLock, FaUserPlus } from 'react-icons/fa'\r\nimport { MdEmail } from 'react-icons/md'\r\nimport AlertSignUp from './AlertSignUp'\r\nconst MotionButton = motion(Button)\r\n\r\nfunction SignupForm({ avatar }) {\r\n  const CFaUserAlt = chakra(FaUserAlt)\r\n  const CFaUserPlus = chakra(FaUserPlus)\r\n  const CFaLock = chakra(FaLock)\r\n  const CMdOutlineEmail = chakra(MdEmail)\r\n\r\n  const signup = useAuthStore((state) => state.signup)\r\n\r\n  const [username, setUserName] = useState('')\r\n  const [surname, setSurname] = useState('')\r\n  const [email, setEmail] = useState()\r\n  const [password, setPassword] = useState('')\r\n  const toast = useToast()\r\n\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const handleShowClick = () => setShowPassword(!showPassword)\r\n\r\n  async function handleSignup(e) {\r\n    e.preventDefault()\r\n    setError(false)\r\n\r\n    if (password.trim().length < 7) {\r\n      return setError('password should have a minimum of seven characters.')\r\n    }\r\n\r\n    setIsLoading(true)\r\n\r\n    try {\r\n      await signup({\r\n        username,\r\n        surname,\r\n        email,\r\n        password: password.trim(),\r\n      })\r\n      setIsLoading(false)\r\n      toast({\r\n        render: () => <AlertSignUp status={true} />,\r\n      })\r\n    } catch (err) {\r\n      toast({\r\n        render: () => <AlertSignUp status={false} />,\r\n      })\r\n      const msg = err?.response?.data?.error || err.message\r\n\r\n      setError(msg)\r\n\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box w={{ base: 'full', md: 'sm' }} mx=\"auto\">\r\n      <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\r\n        <IoIosArrowRoundBack />\r\n        <Link to=\"/\" fontSize=\"xs\">\r\n          Back\r\n        </Link>\r\n      </Flex>\r\n\r\n      <Stack shadow=\"2xl\" rounded=\"lg\" spacing={4} py={6} px={4} mt={2} as={'form'} onSubmit={handleSignup}>\r\n        <Flex align=\"center\" justify=\"center\" direction=\"column\" px={2}>\r\n          <Avatar h=\"90px\" w=\"90px\" src={avatar} />\r\n          <Text fontWeight=\"bold\">{username}</Text>\r\n        </Flex>\r\n        <FormControl id=\"firstName\">\r\n          <InputGroup>\r\n            <InputLeftElement pointerEvents=\"none\" children={<CFaUserAlt color=\"gray.300\" />} />\r\n            <Input\r\n              color=\"gray.700\"\r\n              value={username}\r\n              placeholder=\"First name\"\r\n              onChange={(e) => setUserName(e.target.value)}\r\n              onBlur={(e) => setUserName(e.target.value.trim())}\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </FormControl>\r\n        <FormControl id=\"lastName\">\r\n          <InputGroup>\r\n            <InputLeftElement pointerEvents=\"none\" children={<CFaUserPlus color=\"gray.300\" />} />\r\n            <Input\r\n              color=\"gray.700\"\r\n              value={surname}\r\n              placeholder=\"Last name\"\r\n              onChange={(e) => setSurname(e.target.value)}\r\n              onBlur={(e) => setSurname(e.target.value.trim())}\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </FormControl>\r\n        <FormControl id=\"email\">\r\n          <InputGroup>\r\n            <InputLeftElement pointerEvents=\"none\" children={<CMdOutlineEmail color=\"gray.300\" />} />\r\n            <Input\r\n              value={email}\r\n              type=\"email\"\r\n              placeholder=\"email address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              onBlur={(e) => setEmail(e.target.value.trim())}\r\n              required\r\n            />\r\n          </InputGroup>\r\n        </FormControl>\r\n        <FormControl id=\"password\">\r\n          <InputGroup>\r\n            <InputLeftElement pointerEvents=\"none\" color=\"gray.300\" children={<CFaLock color=\"gray.300\" />} />\r\n            <Input\r\n              value={password}\r\n              type={showPassword ? 'text' : 'password'}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              onBlur={(e) => setPassword(e.target.value.trim())}\r\n              required\r\n            />\r\n            <InputRightElement width=\"4.5rem\">\r\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\r\n                {showPassword ? 'Hide' : 'Show'}\r\n              </Button>\r\n            </InputRightElement>\r\n          </InputGroup>\r\n          <FormHelperText textAlign=\"right\">\r\n            <Link>forgot password?</Link>\r\n          </FormHelperText>\r\n        </FormControl>\r\n        <Stack spacing={10}>\r\n          <MotionButton\r\n            colorScheme=\"teal\"\r\n            isLoading={isLoading}\r\n            type=\"submit\"\r\n            whileHover={{ scale: 1.05 }}\r\n            whileTap={{ scale: 0.95 }}\r\n          >\r\n            Create Account\r\n          </MotionButton>\r\n          {error && (\r\n            <Alert status=\"error\" mt={4} color=\"orange.700\" fontWeight=\"semibold\">\r\n              <AlertIcon />\r\n              <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\r\n              {error}\r\n            </Alert>\r\n          )}\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Stack, Heading, Text } from '@chakra-ui/react'\r\n\r\nimport SignupForm from './components/SignupForm'\r\n\r\nexport default function Signup() {\r\n  const [accountType] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n\r\n  const cancelSignup = () => setAvatar('')\r\n  const renderContent = () => {\r\n    return <SignupForm avatar={avatar} onCancel={cancelSignup} isKid={accountType === 'kid'} />\r\n  }\r\n\r\n  return (\r\n    <Box minH=\"100vh\">\r\n      <Stack spacing={5} maxW={'3xl'} w={'full'} py={2} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\r\n        <Stack align={'center'} spacing={4}>\r\n          <Heading fontSize={{ base: '2xl', md: '4xl' }} textColor=\"white\" lineHeight={1}>\r\n            Sign up\r\n          </Heading>\r\n        </Stack>\r\n        <Box>{renderContent()}</Box>\r\n        <Text fontSize=\"x\" textColor=\"gray.700\" textAlign=\"center\">\r\n          Already have an account?{' '}\r\n          <Link to=\"/login\">\r\n            <Box as=\"span\" fontWeight=\"extrabold\">\r\n              Login\r\n            </Box>\r\n          </Link>\r\n        </Text>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n"],"names":["_ref","status","result","sendLetter2","sendUnSuccess","_jsx","Box","bg","w","py","px","rounded","mt","shadow","position","top","right","children","Flex","h","align","Lottie","animationData","loop","play","MotionButton","motion","Button","avatar","CFaUserAlt","chakra","FaUserAlt","CFaUserPlus","FaUserPlus","CFaLock","FaLock","CMdOutlineEmail","MdEmail","signup","useAuthStore","state","username","setUserName","useState","surname","setSurname","email","setEmail","password","setPassword","toast","useToast","isLoading","setIsLoading","error","setError","showPassword","setShowPassword","_jsxs","base","md","mx","color","as","IoIosArrowRoundBack","Link","to","fontSize","Stack","spacing","onSubmit","async","e","preventDefault","trim","length","render","AlertSignUp","err","_err$response","_err$response$data","msg","response","data","message","justify","direction","Avatar","src","Text","fontWeight","FormControl","id","InputGroup","InputLeftElement","pointerEvents","Input","value","placeholder","onChange","target","onBlur","required","type","InputRightElement","width","size","onClick","handleShowClick","FormHelperText","textAlign","colorScheme","whileHover","scale","whileTap","Alert","AlertIcon","CloseButton","Signup","accountType","setAvatar","cancelSignup","minH","maxW","Heading","textColor","lineHeight","SignupForm","onCancel","isKid"],"sourceRoot":""}