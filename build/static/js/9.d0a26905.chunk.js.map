{"version":3,"sources":["pages/Login/components/LoginForm.js","pages/Login/index.js"],"names":["MotionButton","motion","Button","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","LoginForm","login","useStore","state","history","useHistory","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","showPassword","setShowPassword","_handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_err$response","_err$response$data","msg","wrap","_context","prev","next","preventDefault","trim","then","push","t0","response","data","message","finish","stop","apply","arguments","_jsx","Box","as","rounded","shadow","p","w","base","md","onSubmit","_x","children","Stack","spacing","_jsxs","FormControl","InputGroup","InputLeftElement","pointerEvents","color","Input","type","placeholder","onChange","target","value","required","InputRightElement","width","h","size","onClick","FormHelperText","textAlign","Link","to","colorScheme","whileHover","scale","whileTap","Alert","status","mt","fontWeight","AlertIcon","CloseButton","position","right","top","Login","toggleColorMode","useColorMode","minH","maxW","py","px","mx","align","Avatar","bg","Heading","Text","display","alignItems","FormLabel","htmlFor","mb","Switch","id","Flex","IoIosArrowRoundBack","fontSize"],"mappings":"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","file":"static/js/9.d0a26905.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  Box,\r\n  CloseButton,\r\n  FormControl,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  InputLeftElement,\r\n  chakra,\r\n  InputGroup,\r\n  InputRightElement,\r\n  FormHelperText,\r\n} from '@chakra-ui/react'\r\n\r\nimport useStore from 'store/useAuthStore'\r\n\r\nimport { FaUserAlt, FaLock } from 'react-icons/fa'\r\nconst MotionButton = motion(Button)\r\n\r\nconst CFaUserAlt = chakra(FaUserAlt)\r\nconst CFaLock = chakra(FaLock)\r\n\r\nexport default function LoginForm() {\r\n  const login = useStore((state) => state.login)\r\n  const history = useHistory()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const handleShowClick = () => setShowPassword(!showPassword)\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    setError(false)\r\n    try {\r\n      await login(username, password.trim()).then(() => history.push('/'))\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || err.message\r\n      setError(msg)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box as={'form'} rounded={'lg'} shadow={'2xl'} p={8} w={{ base: 'full', md: 'md' }} onSubmit={handleLogin}>\r\n      <Stack spacing={4}>\r\n        <Stack spacing={10}>\r\n          <FormControl>\r\n            <InputGroup>\r\n              <InputLeftElement pointerEvents=\"none\" children={<CFaUserAlt color=\"gray.300\" />} />\r\n              <Input type=\"email\" placeholder=\"email address\" onChange={(e) => setUsername(e.target.value)} />\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputGroup>\r\n              <InputLeftElement pointerEvents=\"none\" color=\"gray.300\" children={<CFaLock color=\"gray.300\" />} />\r\n              <Input\r\n                type={showPassword ? 'text' : 'password'}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\r\n                  {showPassword ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormHelperText textAlign=\"right\">\r\n              <Link to=\"/reset-password\">Forgot password?</Link>\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <Stack spacing={10}>\r\n            <MotionButton\r\n              colorScheme=\"teal\"\r\n              isLoading={isLoading}\r\n              type=\"submit\"\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              Sign in\r\n            </MotionButton>\r\n            {error && (\r\n              <Alert status=\"error\" mt={4} color=\"teal.700\" fontWeight=\"semibold\">\r\n                <AlertIcon />\r\n                <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport { Box, Stack, Heading, Text, Avatar, Switch, FormControl, FormLabel, useColorMode, Flex } from '@chakra-ui/react'\r\n\r\nimport LoginForm from './components/LoginForm'\r\nimport { IoIosArrowRoundBack } from 'react-icons/io'\r\n\r\nexport default function Login() {\r\n  const { toggleColorMode } = useColorMode()\r\n\r\n  return (\r\n    <Box minH=\"100vh\">\r\n      <Stack spacing={8} maxW={'lg'} w={'full'} py={12} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\r\n        <Stack align={'center'}>\r\n          <Avatar bg=\"teal.500\" />\r\n          <Heading color=\"teal.400\">Welcome</Heading>\r\n          <Text textAlign=\"center\">\r\n            New to us?{' '}\r\n            <Link color=\"teal.500\" to=\"/signup\">\r\n              <Box as=\"span\" bg=\"teal\" px={2} py={1} rounded=\"md\">\r\n                Sign Up\r\n              </Box>\r\n            </Link>\r\n          </Text>\r\n        </Stack>\r\n        <LoginForm />\r\n        <FormControl display=\"flex\" alignItems=\"center\">\r\n          <FormLabel htmlFor=\"dark_mode\" mb=\"0\">\r\n            Enable Dark Mode?\r\n          </FormLabel>\r\n          <Switch id=\"dark_mode\" colorScheme=\"teal\" size=\"lg\" onChange={toggleColorMode} />\r\n          <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\r\n            <IoIosArrowRoundBack />\r\n            <Link to=\"/\" fontSize=\"xs\">\r\n              Back\r\n            </Link>\r\n          </Flex>\r\n        </FormControl>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n"],"sourceRoot":""}