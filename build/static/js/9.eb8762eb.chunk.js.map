{"version":3,"sources":["pages/Signup/components/AlertSignUp.js","pages/Signup/components/SignupForm.js","pages/Signup/index.js"],"names":["AlertSignUp","_ref","status","result","sendLetter2","sendUnSuccess","_jsx","Box","bg","w","py","px","rounded","mt","shadow","position","top","right","children","Flex","h","align","Lottie","animationData","loop","play","MotionButton","motion","Button","SignupForm","avatar","CFaUserAlt","chakra","FaUserAlt","CFaUserPlus","FaUserPlus","CFaLock","FaLock","CMdOutlineEmail","MdEmail","signup","useAuthStore","state","username","setUserName","useState","surname","setSurname","email","setEmail","password","setPassword","toast","useToast","isLoading","setIsLoading","error","setError","showPassword","setShowPassword","_jsxs","base","md","mx","color","as","IoIosArrowRoundBack","Link","to","fontSize","Stack","spacing","onSubmit","async","e","preventDefault","trim","length","render","err","_err$response","_err$response$data","msg","response","data","message","justify","direction","Avatar","src","Text","fontWeight","FormControl","id","InputGroup","InputLeftElement","pointerEvents","Input","value","placeholder","onChange","target","onBlur","required","type","InputRightElement","width","size","onClick","handleShowClick","FormHelperText","textAlign","colorScheme","whileHover","scale","whileTap","Alert","AlertIcon","CloseButton","Signup","accountType","setAvatar","cancelSignup","minH","maxW","Heading","textColor","lineHeight","onCancel","isKid"],"mappings":"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","file":"static/js/9.eb8762eb.chunk.js","sourcesContent":["import { Box, Flex } from '@chakra-ui/react'\nimport Lottie from 'react-lottie-player'\n\nimport sendLetter2 from '../../../animations/sendLetter2.json'\nimport sendUnSuccess from '../../../animations/sendUnsuccess.json'\n\nconst AlertSignUp = ({ status }) => {\n  const result = status ? sendLetter2 : sendUnSuccess\n\n  return (\n    <Box\n      bg=\"green.100\"\n      w=\"10xl\"\n      py={8}\n      px={4}\n      rounded=\"md\"\n      mt={4} // Adjusted the margin from mt={32} to mt={4}\n      shadow=\"lg\"\n      position=\"fixed\" // Changed position to \"fixed\"\n      top={0} // Positioned at the top of the viewport\n      right={5} // Positioned at the right of the viewport\n    >\n      <Flex>\n        <Box h={48} w={48} align=\"center\">\n          <Lottie animationData={result} loop={true} play />\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default AlertSignUp\n","import { useState } from 'react'\n// import { useLocation } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\n\nimport { motion } from 'framer-motion'\nimport {\n  Alert,\n  AlertIcon,\n  Avatar,\n  Box,\n  Button,\n  chakra,\n  CloseButton,\n  Flex,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Stack,\n  Text,\n  useToast,\n} from '@chakra-ui/react'\nimport useAuthStore from 'store/useAuthStore'\n\nimport { IoIosArrowRoundBack } from 'react-icons/io'\nimport { FaUserAlt, FaLock, FaUserPlus } from 'react-icons/fa'\nimport { MdEmail } from 'react-icons/md'\nimport AlertSignUp from './AlertSignUp'\nconst MotionButton = motion(Button)\n\nfunction SignupForm({ avatar }) {\n  const CFaUserAlt = chakra(FaUserAlt)\n  const CFaUserPlus = chakra(FaUserPlus)\n  const CFaLock = chakra(FaLock)\n  const CMdOutlineEmail = chakra(MdEmail)\n\n  const signup = useAuthStore((state) => state.signup)\n\n  const [username, setUserName] = useState('')\n  const [surname, setSurname] = useState('')\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState('')\n  const toast = useToast()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(false)\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleShowClick = () => setShowPassword(!showPassword)\n\n  async function handleSignup(e) {\n    e.preventDefault()\n    setError(false)\n\n    if (password.trim().length < 7) {\n      return setError('password should have a minimum of seven characters.')\n    }\n\n    setIsLoading(true)\n\n    try {\n      await signup({\n        username,\n        surname,\n        email,\n        password: password.trim(),\n      })\n      setIsLoading(false)\n      toast({\n        render: () => <AlertSignUp status={true} />,\n      })\n    } catch (err) {\n      toast({\n        render: () => <AlertSignUp status={false} />,\n      })\n      const msg = err?.response?.data?.error || err.message\n\n      setError(msg)\n\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Box w={{ base: 'full', md: 'sm' }} mx=\"auto\">\n      <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\n        <IoIosArrowRoundBack />\n        <Link to=\"/\" fontSize=\"xs\">\n          Back\n        </Link>\n      </Flex>\n\n      <Stack shadow=\"2xl\" rounded=\"lg\" spacing={4} py={6} px={4} mt={2} as={'form'} onSubmit={handleSignup}>\n        <Flex align=\"center\" justify=\"center\" direction=\"column\" px={2}>\n          <Avatar h=\"90px\" w=\"90px\" src={avatar} />\n          <Text fontWeight=\"bold\">{username}</Text>\n        </Flex>\n        <FormControl id=\"firstName\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" children={<CFaUserAlt color=\"gray.300\" />} />\n            <Input\n              color=\"gray.700\"\n              value={username}\n              placeholder=\"First name\"\n              onChange={(e) => setUserName(e.target.value)}\n              onBlur={(e) => setUserName(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"lastName\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" children={<CFaUserPlus color=\"gray.300\" />} />\n            <Input\n              color=\"gray.700\"\n              value={surname}\n              placeholder=\"Last name\"\n              onChange={(e) => setSurname(e.target.value)}\n              onBlur={(e) => setSurname(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"email\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" children={<CMdOutlineEmail color=\"gray.300\" />} />\n            <Input\n              value={email}\n              type=\"email\"\n              placeholder=\"email address\"\n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={(e) => setEmail(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"password\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" color=\"gray.300\" children={<CFaLock color=\"gray.300\" />} />\n            <Input\n              value={password}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              onBlur={(e) => setPassword(e.target.value.trim())}\n              required\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n          <FormHelperText textAlign=\"right\">\n            <Link>forgot password?</Link>\n          </FormHelperText>\n        </FormControl>\n        <Stack spacing={10}>\n          <MotionButton\n            colorScheme=\"teal\"\n            isLoading={isLoading}\n            type=\"submit\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            Create Account\n          </MotionButton>\n          {error && (\n            <Alert status=\"error\" mt={4} color=\"orange.700\" fontWeight=\"semibold\">\n              <AlertIcon />\n              <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\n              {error}\n            </Alert>\n          )}\n        </Stack>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default SignupForm\n","import { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Box, Stack, Heading, Text } from '@chakra-ui/react'\r\n\r\nimport SignupForm from './components/SignupForm'\r\n\r\nexport default function Signup() {\r\n  const [accountType] = useState('')\r\n  const [avatar, setAvatar] = useState('')\r\n\r\n  const cancelSignup = () => setAvatar('')\r\n  const renderContent = () => {\r\n    return <SignupForm avatar={avatar} onCancel={cancelSignup} isKid={accountType === 'kid'} />\r\n  }\r\n\r\n  return (\r\n    <Box minH=\"100vh\">\r\n      <Stack spacing={5} maxW={'3xl'} w={'full'} py={2} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\r\n        <Stack align={'center'} spacing={4}>\r\n          <Heading fontSize={{ base: '2xl', md: '4xl' }} textColor=\"white\" lineHeight={1}>\r\n            Sign up\r\n          </Heading>\r\n        </Stack>\r\n        <Box>{renderContent()}</Box>\r\n        <Text fontSize=\"x\" textColor=\"gray.700\" textAlign=\"center\">\r\n          Already have an account?{' '}\r\n          <Link to=\"/login\">\r\n            <Box as=\"span\" fontWeight=\"extrabold\">\r\n              Login\r\n            </Box>\r\n          </Link>\r\n        </Text>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n"],"sourceRoot":""}