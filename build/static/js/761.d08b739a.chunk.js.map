{"version":3,"file":"static/js/761.d08b739a.chunk.js","mappings":"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","sources":["pages/Login/components/LoginForm.jsx","pages/Login/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  CloseButton,\n  FormControl,\n  Input,\n  Stack,\n  Button,\n  InputLeftElement,\n  chakra,\n  InputGroup,\n  InputRightElement,\n  FormHelperText,\n} from '@chakra-ui/react'\n\nimport { FaUserAlt, FaLock } from 'react-icons/fa'\nimport useAuthStore from '../../../store/useAuthStore'\n\nconst MotionButton = motion(Button)\n\nconst CFaUserAlt = chakra(FaUserAlt)\nconst CFaLock = chakra(FaLock)\n\nconst LoginForm = () => {\n  const login = useAuthStore((state) => state.login)\n  const accessToken = useAuthStore((state) => state.accessToken)\n  const setToken = useAuthStore((state) => state.setToken)\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(false)\n  const [redirect, setRedirect] = useState(false)\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  const navigate = useNavigate()\n\n  const handleShowClick = () => setShowPassword(!showPassword)\n\n  useEffect(() => {\n    if (accessToken) {\n      setRedirect(true)\n    }\n  }, [accessToken])\n\n  async function handleLogin(e) {\n    e.preventDefault()\n    setIsLoading(true)\n    setError(false)\n    try {\n      await login(username, password.trim())\n    } catch (err) {\n      const msg = err.response?.data?.message || err.message\n      if (msg !== false) {\n        setToken(null)\n      }\n      setError(msg)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  if (redirect) {\n    navigate('/')\n  }\n\n  return (\n    <Box as=\"form\" rounded=\"lg\" shadow=\"2xl\" p={8} w={{ base: 'full', md: 'md' }} onSubmit={(e) => handleLogin(e)}>\n      <Stack spacing={4}>\n        <Stack spacing={10}>\n          <FormControl>\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\">\n                <CFaUserAlt color=\"gray.300\" />\n              </InputLeftElement>\n              <Input type=\"email\" placeholder=\"email address\" onChange={(e) => setUsername(e.target.value)} />\n            </InputGroup>\n          </FormControl>\n          <FormControl>\n            <InputGroup>\n              <InputLeftElement pointerEvents=\"none\" color=\"gray.300\">\n                <CFaLock color=\"gray.300\" />\n              </InputLeftElement>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n            <FormHelperText textAlign=\"right\">\n              <Link to=\"/reset-password\">Forgot password?</Link>\n            </FormHelperText>\n          </FormControl>\n          <Stack spacing={10}>\n            <MotionButton\n              colorScheme=\"teal\"\n              isLoading={isLoading}\n              type=\"submit\"\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              Sign in\n            </MotionButton>\n            {error && (\n              <Alert status=\"error\" mt={4} color=\"teal.700\" fontWeight=\"semibold\">\n                <AlertIcon />\n                <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\n                {error}\n              </Alert>\n            )}\n          </Stack>\n        </Stack>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, Stack, Heading, Text, Avatar, Switch, FormControl, FormLabel, useColorMode, Flex } from '@chakra-ui/react'\n\nimport { IoIosArrowRoundBack } from 'react-icons/io'\nimport LoginForm from './components/LoginForm'\n\nconst LoginDefault = () => {\n  const { toggleColorMode } = useColorMode()\n\n  return (\n    <Box minH=\"100vh\">\n      <Stack spacing={8} maxW=\"lg\" w=\"full\" py={12} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\n        <Stack align=\"center\">\n          <Avatar bg=\"teal.500\" />\n          <Heading color=\"teal.400\">Welcome</Heading>\n          <Text textAlign=\"center\">\n            New to us?{' '}\n            <Link color=\"teal.500\" to=\"/signup\">\n              <Box as=\"span\" bg=\"teal\" px={2} py={1} rounded=\"md\">\n                Sign Up\n              </Box>\n            </Link>\n          </Text>\n        </Stack>\n        <LoginForm />\n        <FormControl display=\"flex\" alignItems=\"center\">\n          <FormLabel htmlFor=\"dark_mode\" mb=\"0\">\n            Enable Dark Mode?\n          </FormLabel>\n          <Switch id=\"dark_mode\" colorScheme=\"teal\" size=\"lg\" onChange={toggleColorMode} />\n          <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\n            <IoIosArrowRoundBack />\n            <Link to=\"/\" fontSize=\"xs\">\n              Back\n            </Link>\n          </Flex>\n        </FormControl>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default LoginDefault\n"],"names":["MotionButton","motion","Button","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","LoginForm","login","useAuthStore","state","accessToken","setToken","username","setUsername","useState","password","setPassword","isLoading","setIsLoading","error","setError","redirect","setRedirect","showPassword","setShowPassword","navigate","useNavigate","useEffect","_jsx","Box","as","rounded","shadow","p","w","base","md","onSubmit","e","async","preventDefault","trim","err","_err$response","_err$response$data","msg","response","data","message","handleLogin","children","Stack","spacing","_jsxs","FormControl","InputGroup","InputLeftElement","pointerEvents","color","Input","type","placeholder","onChange","target","value","required","InputRightElement","width","h","size","onClick","handleShowClick","FormHelperText","textAlign","Link","to","colorScheme","whileHover","scale","whileTap","Alert","status","mt","fontWeight","AlertIcon","CloseButton","position","right","top","LoginDefault","toggleColorMode","useColorMode","minH","maxW","py","px","mx","align","Avatar","bg","Heading","Text","display","alignItems","FormLabel","htmlFor","mb","Switch","id","Flex","IoIosArrowRoundBack","fontSize"],"sourceRoot":""}