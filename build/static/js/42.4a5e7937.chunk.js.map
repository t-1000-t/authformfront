{"version":3,"file":"static/js/42.4a5e7937.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/react/dist/esm/toast/toast.placement.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/use-toast.mjs","../node_modules/@chakra-ui/react/dist/esm/toast/create-toast-fn.mjs","pages/Signup/components/BoxIcon.jsx","pages/Signup/components/AlertSignUp.jsx","pages/Signup/components/SignupForm.jsx","pages/Signup/index.jsx"],"sourcesContent":["'use client';\nfunction getToastPlacement(position, dir) {\n  const computedPosition = position ?? \"bottom\";\n  const logicals = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" }\n  };\n  const logical = logicals[computedPosition];\n  return logical?.[dir] ?? computedPosition;\n}\n\nexport { getToastPlacement };\n","'use client';\nimport { useMemo } from 'react';\nimport { createToastFn } from './create-toast-fn.mjs';\nimport { useToastOptionContext } from './toast.provider.mjs';\nimport { useChakra } from '../system/hooks.mjs';\n\nfunction useToast(options) {\n  const { theme } = useChakra();\n  const defaultOptions = useToastOptionContext();\n  return useMemo(\n    () => createToastFn(theme.direction, {\n      ...defaultOptions,\n      ...options\n    }),\n    [options, theme.direction, defaultOptions]\n  );\n}\n\nexport { useToast };\n","'use client';\nimport { runIfFn } from '@chakra-ui/utils';\nimport { createRenderToast } from './toast.mjs';\nimport { getToastPlacement } from './toast.placement.mjs';\nimport { toastStore } from './toast.store.mjs';\n\nfunction createToastFn(dir, defaultOptions) {\n  const normalizeToastOptions = (options) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir\n    )\n  });\n  const toast = (options) => {\n    const normalizedToastOptions = normalizeToastOptions(options);\n    const Message = createRenderToast(normalizedToastOptions);\n    return toastStore.notify(Message, normalizedToastOptions);\n  };\n  toast.update = (id, options) => {\n    toastStore.update(id, normalizeToastOptions(options));\n  };\n  toast.promise = (promise, options) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null\n    });\n    promise.then(\n      (data) => toast.update(id, {\n        status: \"success\",\n        duration: 5e3,\n        ...runIfFn(options.success, data)\n      })\n    ).catch(\n      (error) => toast.update(id, {\n        status: \"error\",\n        duration: 5e3,\n        ...runIfFn(options.error, error)\n      })\n    );\n  };\n  toast.closeAll = toastStore.closeAll;\n  toast.close = toastStore.close;\n  toast.isActive = toastStore.isActive;\n  return toast;\n}\n\nexport { createToastFn };\n","// components/BoxIcon.jsx\nimport React from 'react'\nimport { Box, useStyleConfig } from '@chakra-ui/react'\n\nconst BoxIcon = ({ children, ...props }) => {\n  const styles = useStyleConfig('BoxIcon', props) // pulls from theme\n  return (\n    <Box __css={styles} {...props}>\n      {children}\n    </Box>\n  )\n}\n\nexport default BoxIcon\n","import React from 'react'\nimport { Box, Flex } from '@chakra-ui/react'\nimport Lottie from 'react-lottie-player'\n\nimport sendLetter2 from '../../../animations/sendLetter2.json'\nimport sendUnSuccess from '../../../animations/sendUnsuccess.json'\nimport BoxIcon from './BoxIcon'\n\n// eslint-disable-next-line react/prop-types\nconst AlertSignUp = ({ status }) => {\n  const result = status ? sendLetter2 : sendUnSuccess\n\n  return (\n    <Box\n      bg=\"green.100\"\n      w=\"10xl\"\n      py={8}\n      px={4}\n      rounded=\"md\"\n      mt={4} // Adjusted the margin from mt={32} to mt={4}\n      shadow=\"lg\"\n      position=\"fixed\" // Changed position to \"fixed\"\n      top={0} // Positioned at the top of the viewport\n      right={5} // Positioned at the right of the viewport\n    >\n      <Flex>\n        <BoxIcon variant={status ? 'success' : 'error'}>\n          <Lottie animationData={result} loop play />\n        </BoxIcon>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default AlertSignUp\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { motion } from 'framer-motion'\nimport {\n  Alert,\n  AlertIcon,\n  Avatar,\n  Box,\n  Button,\n  chakra,\n  CloseButton,\n  Flex,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Stack,\n  Text,\n  useToast,\n} from '@chakra-ui/react'\n\nimport { IoIosArrowRoundBack } from 'react-icons/io'\nimport { FaUserAlt, FaLock, FaUserPlus } from 'react-icons/fa'\nimport { MdEmail } from 'react-icons/md'\nimport { useNavigate } from 'react-router'\nimport useAuthStore from '../../../store/useAuthStore'\nimport AlertSignUp from './AlertSignUp'\n\nconst MotionButton = motion(Button)\n\n// eslint-disable-next-line react/prop-types\nconst SignupForm = ({ avatar }) => {\n  const CFaUserAlt = chakra(FaUserAlt)\n  const CFaUserPlus = chakra(FaUserPlus)\n  const CFaLock = chakra(FaLock)\n  const CMdOutlineEmail = chakra(MdEmail)\n\n  const navigate = useNavigate()\n\n  const signup = useAuthStore((state) => state.signup)\n\n  const [username, setUserName] = useState('')\n  const [surname, setSurname] = useState('')\n  const [email, setEmail] = useState()\n  const [password, setPassword] = useState('')\n  const toast = useToast()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(false)\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  const handleShowClick = () => setShowPassword(!showPassword)\n\n  async function handleSignup(e) {\n    e.preventDefault()\n    setError(false)\n\n    if (password.trim().length < 7) {\n      setError('password should have a minimum of seven characters.')\n      return null\n    }\n\n    setIsLoading(true)\n\n    try {\n      await signup({\n        username,\n        surname,\n        email,\n        password: password.trim(),\n      })\n      toast({\n        render: () => <AlertSignUp status />,\n      })\n      setIsLoading(false)\n    } catch (err) {\n      toast({\n        render: () => <AlertSignUp status={false} />,\n      })\n      const msg = err?.response?.data?.error || err.message\n\n      setError(msg)\n\n      setIsLoading(false)\n      navigate('/')\n    } finally {\n      navigate('/login')\n    }\n\n    return null\n  }\n\n  return (\n    <Box w={{ base: 'full', md: 'sm' }} mx=\"auto\">\n      <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\n        <IoIosArrowRoundBack />\n        <Link to=\"/\" fontSize=\"xs\">\n          Back\n        </Link>\n      </Flex>\n\n      <Stack shadow=\"2xl\" rounded=\"lg\" spacing={4} py={6} px={4} mt={2} as=\"form\" onSubmit={(e) => handleSignup(e)}>\n        <Flex align=\"center\" justify=\"center\" direction=\"column\" px={2}>\n          <Avatar h=\"90px\" w=\"90px\" src={avatar} />\n          <Text fontWeight=\"bold\">{username}</Text>\n        </Flex>\n        <FormControl id=\"firstName\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <CFaUserAlt color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              color=\"gray.700\"\n              value={username}\n              placeholder=\"First name\"\n              onChange={(e) => setUserName(e.target.value)}\n              onBlur={(e) => setUserName(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"lastName\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <CFaUserPlus color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              color=\"gray.700\"\n              value={surname}\n              placeholder=\"Last name\"\n              onChange={(e) => setSurname(e.target.value)}\n              onBlur={(e) => setSurname(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"email\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\">\n              <CMdOutlineEmail color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              value={email}\n              type=\"email\"\n              placeholder=\"email address\"\n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={(e) => setEmail(e.target.value.trim())}\n              required\n            />\n          </InputGroup>\n        </FormControl>\n        <FormControl id=\"password\">\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" color=\"gray.300\">\n              <CFaLock color=\"gray.300\" />\n            </InputLeftElement>\n            <Input\n              value={password}\n              type={showPassword ? 'text' : 'password'}\n              placeholder=\"Password\"\n              onChange={(e) => setPassword(e.target.value)}\n              onBlur={(e) => setPassword(e.target.value.trim())}\n              required\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\n                {showPassword ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n          <FormHelperText textAlign=\"right\">\n            <Link to=\"/\">forgot password?</Link>\n          </FormHelperText>\n        </FormControl>\n        <Stack spacing={10}>\n          <MotionButton\n            colorScheme=\"teal\"\n            isLoading={isLoading}\n            type=\"submit\"\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n          >\n            Create Account\n          </MotionButton>\n          {error && (\n            <Alert status=\"error\" mt={4} color=\"orange.700\" fontWeight=\"semibold\">\n              <AlertIcon />\n              <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\n              {error}\n            </Alert>\n          )}\n        </Stack>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default SignupForm\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, Stack, Heading, Text } from '@chakra-ui/react'\n\nimport SignupForm from './components/SignupForm'\n\nconst SignupDefault = () => {\n  const [accountType] = useState('')\n  const [avatar, setAvatar] = useState('')\n\n  const cancelSignup = () => setAvatar('')\n  const renderContent = () => {\n    return <SignupForm avatar={avatar} onCancel={cancelSignup} isKid={accountType === 'kid'} />\n  }\n\n  return (\n    <Box minH=\"100vh\">\n      <Stack spacing={5} maxW=\"3xl\" w=\"full\" py={2} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\n        <Stack align=\"center\" spacing={4}>\n          <Heading fontSize={{ base: '2xl', md: '4xl' }} textColor=\"white\" lineHeight={1}>\n            Sign up\n          </Heading>\n        </Stack>\n        <Box>{renderContent()}</Box>\n        <Text fontSize=\"x\" textColor=\"gray.700\" textAlign=\"center\">\n          Already have an account?{' '}\n          <Link to=\"/login\">\n            <Box as=\"span\" fontWeight=\"extrabold\">\n              Login\n            </Box>\n          </Link>\n        </Text>\n      </Stack>\n    </Box>\n  )\n}\n\nexport default SignupDefault\n"],"names":["getToastPlacement","position","dir","_logical$dir","computedPosition","logical","ltr","rtl","useToast","options","theme","useChakra","defaultOptions","useToastOptionContext","useMemo","normalizeToastOptions","_options$position","_objectSpread","toast","normalizedToastOptions","Message","createRenderToast","toastStore","notify","update","id","promise","loading","status","duration","then","data","runIfFn","success","catch","error","closeAll","close","isActive","createToastFn","direction","_ref","children","props","_objectWithoutProperties","_excluded","styles","useStyleConfig","_jsx","Box","__css","result","sendLetter2","sendUnSuccess","bg","w","py","px","rounded","mt","shadow","top","right","Flex","BoxIcon","variant","Lottie","animationData","loop","play","MotionButton","motion","Button","avatar","CFaUserAlt","chakra","FaUserAlt","CFaUserPlus","FaUserPlus","CFaLock","FaLock","CMdOutlineEmail","MdEmail","navigate","useNavigate","signup","useAuthStore","state","username","setUserName","useState","surname","setSurname","email","setEmail","password","setPassword","isLoading","setIsLoading","setError","showPassword","setShowPassword","_jsxs","base","md","mx","color","align","as","IoIosArrowRoundBack","Link","to","fontSize","Stack","spacing","onSubmit","e","async","preventDefault","trim","length","render","AlertSignUp","err","_err$response","_err$response$data","msg","response","message","handleSignup","justify","Avatar","h","src","Text","fontWeight","FormControl","InputGroup","InputLeftElement","pointerEvents","Input","value","placeholder","onChange","target","onBlur","required","type","InputRightElement","width","size","onClick","handleShowClick","FormHelperText","textAlign","colorScheme","whileHover","scale","whileTap","Alert","AlertIcon","CloseButton","SignupDefault","accountType","setAvatar","cancelSignup","minH","maxW","Heading","textColor","lineHeight","SignupForm","onCancel","isKid"],"sourceRoot":""}