{"version":3,"file":"static/js/140.4471fdcf.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/layout/src/list.tsx","../node_modules/@chakra-ui/layout/src/spacer.tsx","pages/Notes/components/Notes.js","pages/Notes/index.js","../node_modules/@chakra-ui/textarea/src/textarea.tsx","../node_modules/utilities/object-utils/src/omit.ts"],"sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface SpacerProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * A flexible flex spacer that expands along the major axis of its containing flex layout.\n * It renders a `div` by default, and takes up any available space.\n *\n * @see Docs https://chakra-ui.com/flex#using-the-spacer\n */\nexport const Spacer = chakra(\"div\", {\n  baseStyle: {\n    flex: 1,\n    justifySelf: \"stretch\",\n    alignSelf: \"stretch\",\n  },\n})\n\nSpacer.displayName = \"Spacer\"\n","import { useEffect, useState, useCallback  } from 'react'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container, Flex,\r\n  FormControl,\r\n  Heading, List, ListIcon, ListItem, Spacer,\r\n  Stack,\r\n  Textarea,\r\n} from '@chakra-ui/react'\r\nimport useAuthStore from 'store/useAuthStore'\r\nimport { motion } from 'framer-motion'\r\nimport { MdCheckCircle } from 'react-icons/md'\r\nimport axios from 'utils/axios'\r\n\r\nconst MotionButton = motion(Button)\r\n\r\nexport default function Notes() {\r\n  const { noteText, deleteNote, accessToken, user, list, setNoteList } = useAuthStore()\r\n  const [value, setValue] = useState('')\r\n\r\n  // Define fetchNotes function using useCallback\r\n  const fetchNotes = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/auth/notes', { params: { email: user?.userData?.email }})\r\n      setNoteList(response.data.notes)\r\n    } catch (error) {\r\n      console.error('Error fetching notes:', error)\r\n    }\r\n  }, [user?.userData?.email, setNoteList])\r\n\r\n  useEffect(() => {\r\n    if (user?.userData?.email) {\r\n      fetchNotes().then()\r\n    }\r\n  }, [user?.userData?.email, fetchNotes]) // Include fetchNotes in the dependency array\r\n\r\n  async function handleInputChange(e) {\r\n    e.preventDefault()\r\n\r\n    if (!accessToken) {\r\n      console.log('Access token not available')\r\n      return\r\n    }\r\n\r\n    try {\r\n      await noteText({ text: value, email: user.userData.email}) // Assuming noteText sends the note to the server\r\n      console.log('Note sent successfully')\r\n\r\n      // Clear the textarea after successfully sending the note\r\n      setValue('')\r\n    } catch (error) {\r\n      console.error('Error sending note:', error)\r\n    }\r\n  }\r\n\r\n  async function handleDelete(id) {\r\n\r\n    if (!accessToken) {\r\n      console.log('Access token not available')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const result = await deleteNote(id)\r\n      if (result.status === 200 && result.statusText === 'OK') {\r\n        fetchNotes()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending note:', error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container maxW={'6xl'} py={24} px={{ base: 6, md: 12 }}>\r\n      <form onSubmit={handleInputChange}>\r\n        <Box position=\"relative\" maxW=\"850px\" mx=\"auto\" mb={{ base: 4, md: 16 }}>\r\n          <Heading fontSize={{ base: '3xl', md: '4xl', lg: '6xl' }} textAlign={'center'} color=\"#204E78\">\r\n            LIST of MY NOTES\r\n          </Heading>\r\n          <FormControl>\r\n            <Textarea\r\n              value={value}\r\n              placeholder='Please, write some note'\r\n              onChange={(e) => setValue(e.target.value)}\r\n              size='sm'\r\n            />\r\n          </FormControl>\r\n          <Stack spacing={10}>\r\n            <MotionButton\r\n              colorScheme=\"teal\"\r\n              type=\"submit\"\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              Submit\r\n            </MotionButton>\r\n          </Stack>\r\n        </Box>\r\n      </form>\r\n      <List spacing={3}>\r\n        {list?.toReversed().map((item) => {\r\n          return(\r\n            <ListItem>\r\n              <Flex>\r\n                <Box>\r\n                  <ListIcon as={MdCheckCircle} color='green.500' />\r\n                  {item.text}\r\n                </Box>\r\n                <Spacer/>\r\n                <Button\r\n                  size='sm'\r\n                  height='28px'\r\n                  width='100px'\r\n                  border='1px'\r\n                  borderColor='red.500'\r\n                  onClick={() => handleDelete(item._id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </Flex>\r\n            </ListItem>\r\n          )\r\n        })}\r\n      </List>\r\n    </Container>\r\n  )\r\n}\r\n","import Page from '../../components/Page'\r\nimport { Box } from '@chakra-ui/react'\r\nimport Notes from './components/Notes'\r\n\r\n\r\nexport default function NotesDefault() {\r\n\r\n  return(\r\n    <Page>\r\n      <Box bg=\"white\">\r\n        <Notes/>\r\n      </Box>\r\n    </Page>\r\n  )\r\n}","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { omit } from \"@chakra-ui/object-utils\"\n\ninterface TextareaOptions {\n  /**\n   * The border color when the textarea is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the textarea is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\"\n\nconst omitted = [\"h\", \"minH\", \"height\", \"minHeight\"]\n\nexport interface TextareaProps\n  extends Omit<HTMLChakraProps<\"textarea\">, Omitted>,\n    TextareaOptions,\n    FormControlOptions,\n    ThemingProps<\"Textarea\"> {}\n\n/**\n * Textarea is used to enter an amount of text that's longer than a single line\n * @see Docs https://chakra-ui.com/textarea\n */\nexport const Textarea = forwardRef<TextareaProps, \"textarea\">((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props)\n  const { className, rows, ...rest } = omitThemingProps(props)\n\n  const textareaProps = useFormControl<HTMLTextAreaElement>(rest)\n\n  //@ts-ignore\n  const textareaStyles = rows ? omit(styles, omitted) : styles\n\n  return (\n    <chakra.textarea\n      ref={ref}\n      rows={rows}\n      {...textareaProps}\n      className={cx(\"chakra-textarea\", className)}\n      __css={textareaStyles}\n    />\n  )\n})\n\nTextarea.displayName = \"Textarea\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n"],"names":["ListStylesProvider","useListStyles","createContext","name","errorMessage","List","forwardRef","props","ref","styles","useMultiStyleConfig","children","styleType","stylePosition","spacing","rest","omitThemingProps","validChildren","getValidChildren","selector","spacingStyle","mt","jsx","value","chakra","ul","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","li","item","ListIcon","Icon","icon","Spacer","baseStyle","flex","justifySelf","alignSelf","MotionButton","motion","Button","Notes","_user$userData2","_user$userData4","noteText","deleteNote","accessToken","user","list","setNoteList","useAuthStore","setValue","useState","fetchNotes","useCallback","async","_user$userData","response","axios","get","params","email","userData","data","notes","error","console","useEffect","_user$userData3","then","_jsxs","Container","maxW","py","px","base","md","_jsx","onSubmit","e","preventDefault","text","log","Box","position","mx","mb","Heading","fontSize","lg","textAlign","color","FormControl","Textarea","placeholder","onChange","target","size","Stack","colorScheme","type","whileHover","scale","whileTap","toReversed","map","Flex","MdCheckCircle","height","width","border","borderColor","onClick","id","result","status","statusText","handleDelete","_id","NotesDefault","Page","bg","omitted","useStyleConfig","className","rows","textareaProps","useFormControl","textareaStyles","object","keysToOmit","arguments","length","undefined","clone","Object","assign","key","omit","textarea","cx"],"sourceRoot":""}