{"version":3,"sources":["pages/Login/components/LoginForm.js","pages/Login/index.js","../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js","../node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js"],"names":["MotionButton","motion","Button","CFaUserAlt","chakra","FaUserAlt","CFaLock","FaLock","LoginForm","login","useStore","state","history","useHistory","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","error","setError","_useState9","_useState10","showPassword","setShowPassword","_handleLogin","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_err$response","_err$response$data","msg","wrap","_context","prev","next","preventDefault","trim","then","push","t0","response","data","message","finish","stop","apply","arguments","_jsx","Box","as","rounded","shadow","p","w","base","md","onSubmit","_x","children","Stack","spacing","_jsxs","FormControl","InputGroup","InputLeftElement","pointerEvents","color","Input","type","placeholder","onChange","target","value","required","InputRightElement","width","h","size","onClick","FormHelperText","textAlign","Link","to","colorScheme","whileHover","scale","whileTap","Alert","status","mt","fontWeight","AlertIcon","CloseButton","position","right","top","Login","toggleColorMode","useColorMode","minH","maxW","py","px","mx","align","Avatar","bg","Heading","Text","display","alignItems","FormLabel","htmlFor","mb","Switch","id","Flex","IoIosArrowRoundBack","fontSize","_extends","Object","assign","i","length","source","key","prototype","hasOwnProperty","call","this","_createContext","createContext","name","strict","useCheckboxGroupContext","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","__DEV__","_excluded$2","MotionSvg","el","m","custom","__motion","svg","CheckIcon","props","React","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","AnimatePresence","initial","div","animate","exit","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest","IconEl","_excluded$1","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","onBlur","onFocus","ariaDescribedBy","_props","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","_props$tabIndex","tabIndex","undefined","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","useRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","warn","condition","handleChange","useCallback","event","useSafeLayoutEffect","current","indeterminate","Boolean","useUpdateEffect","off","trulyDisabled","onKeyDown","on","onKeyUp","getCheckboxProps","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","_inputRef$current","click","focus","nextTick","getInputProps","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","onTouchStart","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","iconStyles","transform","clonedIcon","__css","container","cx","control","span","marginStart","label","displayName","_omitThemingProps","_omitThemingProps$spa","containerStyles","lineHeight","trackStyles","boxSizing","track","labelStyles","thumb"],"mappings":"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","file":"static/js/8.ab88d159.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { motion } from 'framer-motion'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {\r\n  Alert,\r\n  AlertIcon,\r\n  Box,\r\n  CloseButton,\r\n  FormControl,\r\n  Input,\r\n  Stack,\r\n  Button,\r\n  InputLeftElement,\r\n  chakra,\r\n  InputGroup,\r\n  InputRightElement,\r\n  FormHelperText,\r\n} from '@chakra-ui/react'\r\n\r\nimport useStore from 'store/useAuthStore'\r\n\r\nimport { FaUserAlt, FaLock } from 'react-icons/fa'\r\nconst MotionButton = motion(Button)\r\n\r\nconst CFaUserAlt = chakra(FaUserAlt)\r\nconst CFaLock = chakra(FaLock)\r\n\r\nexport default function LoginForm() {\r\n  const login = useStore((state) => state.login)\r\n  const history = useHistory()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState(false)\r\n\r\n  const [showPassword, setShowPassword] = useState(false)\r\n\r\n  const handleShowClick = () => setShowPassword(!showPassword)\r\n\r\n  async function handleLogin(e) {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    setError(false)\r\n    try {\r\n      await login(username, password.trim()).then(() => history.push('/'))\r\n    } catch (err) {\r\n      const msg = err.response?.data?.message || err.message\r\n      setError(msg)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box as={'form'} rounded={'lg'} shadow={'2xl'} p={8} w={{ base: 'full', md: 'md' }} onSubmit={handleLogin}>\r\n      <Stack spacing={4}>\r\n        <Stack spacing={10}>\r\n          <FormControl>\r\n            <InputGroup>\r\n              <InputLeftElement pointerEvents=\"none\" children={<CFaUserAlt color=\"gray.300\" />} />\r\n              <Input type=\"email\" placeholder=\"email address\" onChange={(e) => setUsername(e.target.value)} />\r\n            </InputGroup>\r\n          </FormControl>\r\n          <FormControl>\r\n            <InputGroup>\r\n              <InputLeftElement pointerEvents=\"none\" color=\"gray.300\" children={<CFaLock color=\"gray.300\" />} />\r\n              <Input\r\n                type={showPassword ? 'text' : 'password'}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <InputRightElement width=\"4.5rem\">\r\n                <Button h=\"1.75rem\" size=\"sm\" onClick={handleShowClick}>\r\n                  {showPassword ? 'Hide' : 'Show'}\r\n                </Button>\r\n              </InputRightElement>\r\n            </InputGroup>\r\n            <FormHelperText textAlign=\"right\">\r\n              <Link to=\"/reset-password\">Forgot password?</Link>\r\n            </FormHelperText>\r\n          </FormControl>\r\n          <Stack spacing={10}>\r\n            <MotionButton\r\n              colorScheme=\"teal\"\r\n              isLoading={isLoading}\r\n              type=\"submit\"\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              Sign in\r\n            </MotionButton>\r\n            {error && (\r\n              <Alert status=\"error\" mt={4} color=\"teal.700\" fontWeight=\"semibold\">\r\n                <AlertIcon />\r\n                <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" onClick={() => setError(false)} />\r\n                {error}\r\n              </Alert>\r\n            )}\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport { Box, Stack, Heading, Text, Avatar, Switch, FormControl, FormLabel, useColorMode, Flex } from '@chakra-ui/react'\r\n\r\nimport LoginForm from './components/LoginForm'\r\nimport { IoIosArrowRoundBack } from 'react-icons/io'\r\n\r\nexport default function Login() {\r\n  const { toggleColorMode } = useColorMode()\r\n\r\n  return (\r\n    <Box minH=\"100vh\">\r\n      <Stack spacing={8} maxW={'lg'} w={'full'} py={12} px={{ md: 6 }} mx=\"auto\" position=\"relative\">\r\n        <Stack align={'center'}>\r\n          <Avatar bg=\"teal.500\" />\r\n          <Heading color=\"teal.400\">Welcome</Heading>\r\n          <Text textAlign=\"center\">\r\n            New to us?{' '}\r\n            <Link color=\"teal.500\" to=\"/signup\">\r\n              <Box as=\"span\" bg=\"teal\" px={2} py={1} rounded=\"md\">\r\n                Sign Up\r\n              </Box>\r\n            </Link>\r\n          </Text>\r\n        </Stack>\r\n        <LoginForm />\r\n        <FormControl display=\"flex\" alignItems=\"center\">\r\n          <FormLabel htmlFor=\"dark_mode\" mb=\"0\">\r\n            Enable Dark Mode?\r\n          </FormLabel>\r\n          <Switch id=\"dark_mode\" colorScheme=\"teal\" size=\"lg\" onChange={toggleColorMode} />\r\n          <Flex color=\"gray.600\" align=\"center\" as=\"button\" mx=\"auto\">\r\n            <IoIosArrowRoundBack />\r\n            <Link to=\"/\" fontSize=\"xs\">\r\n              Back\r\n            </Link>\r\n          </Flex>\r\n        </FormControl>\r\n      </Stack>\r\n    </Box>\r\n  )\r\n}\r\n","import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nfunction __motion(el) {\n  var m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n} // @future: only call `motion(chakra.svg)` when we drop framer-motion v3 support\n\n\nvar MotionSvg = __motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n","import { useCheckbox } from '@chakra-ui/checkbox';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { cx, dataAttr, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\", \"children\"];\nvar Switch = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Switch\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"0.5rem\" : _omitThemingProps$spa,\n      children = _omitThemingProps.children,\n      ownProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useCheckbox = useCheckbox(ownProps),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getRootProps = _useCheckbox.getRootProps,\n      getLabelProps = _useCheckbox.getLabelProps;\n\n  var containerStyles = React.useMemo(function () {\n    return _extends({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0\n    }, styles.container);\n  }, [styles.container]);\n  var trackStyles = React.useMemo(function () {\n    return _extends({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\"\n    }, styles.track);\n  }, [styles.track]);\n  var labelStyles = React.useMemo(function () {\n    return _extends({\n      userSelect: \"none\",\n      marginStart: spacing\n    }, styles.label);\n  }, [spacing, styles.label]);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, getRootProps(), {\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-switch__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(chakra.span, _extends({}, getCheckboxProps(), {\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }), /*#__PURE__*/React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-switch__label\"\n  }, getLabelProps(), {\n    __css: labelStyles\n  }), children));\n});\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\";\n}\n\nexport { Switch };\n"],"sourceRoot":""}