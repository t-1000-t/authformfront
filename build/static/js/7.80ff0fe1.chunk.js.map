{"version":3,"sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js","../node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js","../node_modules/@chakra-ui/switch/dist/chakra-ui-switch.esm.js"],"names":["presenceId","getPresenceId","id","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","key","React","size","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","__read","useState","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","useCallback","useForceUpdate","layoutContext","useContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","this","_createContext","createContext","name","strict","useCheckboxGroupContext","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","__DEV__","_excluded$2","MotionSvg","el","m","motion","__motion","chakra","svg","CheckIcon","props","width","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","isChecked","rest","IconEl","_excluded$1","useCheckbox","formControlProps","useFormControlProps","isDisabled","isReadOnly","isRequired","isInvalid","onBlur","onFocus","ariaDescribedBy","_props","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","onChange","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","omit","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","_useBoolean","useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","_useState","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","useControllableProp","isControlled","warn","condition","message","handleChange","event","preventDefault","useSafeLayoutEffect","indeterminate","Boolean","useUpdateEffect","off","trulyDisabled","onKeyDown","on","onKeyUp","getCheckboxProps","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","mergeRefs","node","tagName","onClick","_inputRef$current","click","focus","nextTick","getInputProps","type","required","disabled","readOnly","visuallyHiddenStyle","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","Checkbox","forwardRef","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","includes","callAll","_useCheckbox","iconStyles","transform","fontSize","color","clonedIcon","__css","container","cx","control","span","marginStart","label","displayName","Switch","_omitThemingProps","_omitThemingProps$spa","containerStyles","lineHeight","trackStyles","boxSizing","track","labelStyles","thumb"],"mappings":"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","file":"static/js/7.80ff0fe1.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n","import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nfunction __motion(el) {\n  var m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n} // @future: only call `motion(chakra.svg)` when we drop framer-motion v3 support\n\n\nvar MotionSvg = __motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n","import { useCheckbox } from '@chakra-ui/checkbox';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { cx, dataAttr, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded = [\"spacing\", \"children\"];\nvar Switch = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Switch\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      _omitThemingProps$spa = _omitThemingProps.spacing,\n      spacing = _omitThemingProps$spa === void 0 ? \"0.5rem\" : _omitThemingProps$spa,\n      children = _omitThemingProps.children,\n      ownProps = _objectWithoutPropertiesLoose(_omitThemingProps, _excluded);\n\n  var _useCheckbox = useCheckbox(ownProps),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getRootProps = _useCheckbox.getRootProps,\n      getLabelProps = _useCheckbox.getLabelProps;\n\n  var containerStyles = React.useMemo(function () {\n    return _extends({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0\n    }, styles.container);\n  }, [styles.container]);\n  var trackStyles = React.useMemo(function () {\n    return _extends({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\"\n    }, styles.track);\n  }, [styles.track]);\n  var labelStyles = React.useMemo(function () {\n    return _extends({\n      userSelect: \"none\",\n      marginStart: spacing\n    }, styles.label);\n  }, [spacing, styles.label]);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, getRootProps(), {\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-switch__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(chakra.span, _extends({}, getCheckboxProps(), {\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }), /*#__PURE__*/React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-switch__label\"\n  }, getLabelProps(), {\n    __css: labelStyles\n  }), children));\n});\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\";\n}\n\nexport { Switch };\n"],"sourceRoot":""}