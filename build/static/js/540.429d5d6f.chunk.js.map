{"version":3,"file":"static/js/540.429d5d6f.chunk.js","mappings":"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","sources":["services/promiseBasedToast.jsx","pages/Cv/components/Modal/ModalEdit.jsx","utils/hooks/useModalEdit.jsx","utils/hooks/useDetectChange.jsx","services/customStyles.js","pages/Cv/components/Title.jsx","services/getFirstBigLetter.js","services/listItems.jsx","pages/Cv/components/Contacts.jsx","pages/Cv/components/Education.jsx","services/getObjectNoId.js","pages/Cv/components/Skills.jsx","pages/Cv/components/PetInProgress.jsx","pages/Cv/Wrappers/A4Container.jsx","pages/Cv/Wrappers/CardWrap.jsx","pages/Cv/components/SendData.jsx","pages/Cv/components/Competencies.jsx","pages/Cv/components/Cv.jsx","pages/Cv/components/CvPagePdf.jsx","pages/Cv/Wrappers/GeneratePdf.jsx","pages/Cv/index.jsx"],"sourcesContent":["const promiseBasedToast = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Saving...', description: 'Please wait' },\n    success: { title: 'It has saved!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to save', description: 'Something went wrong.' },\n  })\n}\n\nconst promiseBasedToastDel = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Deleting...', description: 'Please wait' },\n    success: { title: 'It has deleted!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to delete', description: 'Something went wrong.' },\n  })\n}\n\nexport { promiseBasedToast, promiseBasedToastDel }\n","import React from 'react'\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react'\n\nconst ModalEdit = ({ isOpen, onClose, onSubmit, text, onChange, initialRef }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} initialFocusRef={initialRef} scrollBehavior=\"inside\">\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Type your details</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb={6}>\n          {Object.keys(text).map((item, index) => {\n            return (\n              /* eslint-disable-next-line react/no-array-index-key */\n              <FormControl key={index}>\n                <FormLabel>{item.charAt(0) + item.slice(1)}</FormLabel>\n                <Input\n                  name={item}\n                  value={text[item] || ''} // dynamically bind the value\n                  ref={index === 0 ? initialRef : null} // focus first field\n                  placeholder={item}\n                  onChange={onChange}\n                />\n              </FormControl>\n            )\n          })}\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onSubmit}>\n            OK\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ModalEdit\n","import { useCallback, useState } from 'react'\n\nconst useModalEdit = (initialText) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [text, setText] = useState(initialText)\n\n  const onOpen = useCallback(() => {\n    setText(initialText)\n    setIsOpen(true)\n  }, [initialText])\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n    setText(initialText)\n  }, [initialText])\n\n  const onChange = useCallback((e, activeIndex) => {\n    const { name, value } = e.target\n    setText((prev) =>\n      !Array.isArray(prev)\n        ? { ...prev, [name]: value }\n        : prev.map((elem, idx) => (activeIndex === idx ? { ...elem, [name]: value } : elem)),\n    )\n  }, [])\n\n  return {\n    isOpen,\n    text,\n    onOpen,\n    onClose,\n    onChange,\n    setText,\n  }\n}\n\nexport default useModalEdit\n","import { useEffect } from 'react'\nimport { isEqual } from 'lodash'\nimport useAuthStore from '../../store/useAuthStore'\n\nconst useDetectChange = () => {\n  const { currentData, setHasChanged, cv } = useAuthStore()\n\n  useEffect(() => {\n    if (currentData.section === 'strPet') {\n      const currentPet = cv?.user?.newData?.pet ?? {}\n      const changed = !isEqual(currentData.localData, currentPet)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strEducation') {\n      const currentEducation = cv?.user?.newData?.education ?? {}\n      const changed = !isEqual(currentData.localData, currentEducation)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strContacts') {\n      const currentContacts = cv?.user?.newData?.contacts ?? {}\n      const changed = !isEqual(currentData.localData, currentContacts)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strTitles') {\n      const currentTitles = cv?.user?.newData?.title ?? {}\n      const changed = !isEqual(currentData.localData, currentTitles)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strSkills') {\n      const currentSkills = cv?.user?.newData?.skills ?? []\n      const changed = !isEqual(currentData.localData, currentSkills)\n      setHasChanged(changed)\n    }\n    if (currentData.section === 'strCompetencies') {\n      const currentCompetencies = cv?.user?.newData?.competencies ?? []\n      const changed = !isEqual(currentData.localData, currentCompetencies)\n      setHasChanged(changed)\n    }\n  }, [currentData, cv?.user?.newData])\n}\n\nexport default useDetectChange\n","const styleButton = {\n  borderRadius: 'full',\n  w: '30px',\n  h: '30px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  border: '2px',\n  borderColor: 'gray.300',\n  shadow: 'md',\n}\n\nexport default styleButton\n","import React, { useRef } from 'react'\nimport { Box, Button, Flex, Heading } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport ModalEdit from './Modal/ModalEdit'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Title = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const initialRef = useRef(null)\n  const { title } = cv.user.newData\n\n  const { isOpen, text, onOpen, onClose, onChange } = useModalEdit(title)\n\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!text.posname || !text.fullname) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      const updatedTitles = cv.user.newData.title\n      setCurrentData({ section: 'strTitles', localData: updatedTitles })\n      onClose()\n    })\n  }\n\n  return (\n    <Box mb=\"20px\">\n      <Flex mb=\"20px\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n        <Box m={1}>\n          <Heading as=\"h1\" fontSize=\"24px\" fontWeight=\"bold\" mb=\"10px\">\n            {title.posname}\n          </Heading>\n\n          <Heading as=\"h2\" fontSize=\"22px\" fontWeight=\"bold\">\n            {title.fullname}\n          </Heading>\n        </Box>\n        <Button sx={styleButton} m={3} size=\"sx\" onClick={onOpen} bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n          <MdEditNote />\n        </Button>\n\n        <ModalEdit\n          isOpen={isOpen}\n          onClose={onClose}\n          onSubmit={handleSubmit}\n          text={text}\n          onChange={onChange}\n          initialRef={initialRef}\n        />\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Title\n","const getFirstBigLetter = (str) => {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport default getFirstBigLetter\n","import React from 'react'\nimport { Text } from '@chakra-ui/react'\nimport getFirstBigLetter from './getFirstBigLetter'\n\nconst listItems = (obj) => {\n  if (!obj) return () => {}\n  return Object.entries(obj).map(([name, value]) => {\n    let displayValue = value\n\n    // Make emails clickable\n    if (name.toLowerCase().includes('email') || /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n      displayValue = (\n        <a href={`mailto:${value}`} style={{ color: 'blue', textDecoration: 'underline' }}>\n          {value}\n        </a>\n      )\n    }\n\n    // Make links clickable\n    if (name.toLowerCase().includes('linkedin')) {\n      displayValue = (\n        <a\n          href={`https://linkedin.com/in/${value}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: 'blue', textDecoration: 'underline' }}\n        >\n          {value}\n        </a>\n      )\n    }\n\n    // Make links clickable\n    if (name.toLowerCase().includes('own')) {\n      displayValue = (\n        <a\n          href={`https://${value}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: 'blue', textDecoration: 'underline' }}\n        >\n          {value}\n        </a>\n      )\n    }\n\n    return (\n      <Text key={name} mb=\"5px\">\n        <Text as=\"span\">\n          <i>{getFirstBigLetter(name)}</i>\n        </Text>\n        :&nbsp;{displayValue}\n      </Text>\n    )\n  })\n}\n\nexport default listItems\n","import React, { useRef } from 'react'\nimport { Box, Button, Flex, Image } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport ModalEdit from './Modal/ModalEdit'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Contacts = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const initialRef = useRef(null)\n  const { contacts } = cv.user.newData\n  const { onClose, onOpen, onChange, text, isOpen } = useModalEdit(contacts)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!text.email || !text.linkedin || !text.location || !text.languages) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strContacts', localData: contacts })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex w=\"100%\" justifyContent=\"space-between\">\n      <Flex w=\"70%\" justifyContent=\"space-between\">\n        <Box m={1}>{listItems(contacts)}</Box>\n        <Box>\n          <ModalEdit\n            onSubmit={handleSubmit}\n            onChange={onChange}\n            onClose={onClose}\n            text={text}\n            isOpen={isOpen}\n            initialRef={initialRef}\n          />\n          <Box>\n            <Button sx={styleButton} size=\"sx\" onClick={onOpen} bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n              <MdEditNote />\n            </Button>\n          </Box>\n        </Box>\n      </Flex>\n      <Box m={2}>\n        <Image\n          src=\"/images/I_19.jpg\"\n          alt=\"Vlad\"\n          maxWidth=\"280px\"\n          height=\"auto\"\n          border=\"1px solid\"\n          borderColor=\"gray.200\"\n        />\n      </Box>\n    </Flex>\n  )\n}\n\nexport default Contacts\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport ModalEdit from './Modal/ModalEdit'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport styleButton from '../../../services/customStyles'\n\nconst Education = () => {\n  const { putCvInfo, cv, setCurrentData } = useAuthStore()\n  const { education } = cv.user.newData\n  const { onClose, onOpen, onChange, text, isOpen } = useModalEdit(education)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!education.diploma || !education.course) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strEducation', localData: education })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Education:\n      </Text>\n      <Flex justify=\"space-between\">\n        <Box>\n          <Box m={1}>{listItems(education)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Box>\n          <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n            <MdEditNote />\n          </Button>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Education\n","const getObjectNoId = (item) => {\n  return Object.keys(item)\n    .filter((f) => f !== '_id' && f !== 'id')\n    .reduce((obj, key) => ({ ...obj, [key]: item[key] }), {})\n}\n\nexport default getObjectNoId\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { MdOutlineNoteAdd, MdEditNote, MdOutlineDeleteForever } from 'react-icons/md'\nimport { Box, Button, Flex, Text, useToast } from '@chakra-ui/react'\nimport { isArray } from 'lodash'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport listItems from '../../../services/listItems'\nimport ModalEdit from './Modal/ModalEdit'\nimport getObjectNoId from '../../../services/getObjectNoId'\nimport { logError } from '../../../utils/services'\nimport styleButton from '../../../services/customStyles'\nimport { promiseBasedToastDel } from '../../../services/promiseBasedToast'\n\nconst Skills = () => {\n  const { putCvInfo, cv, deleteSkillFromCv, setCurrentData } = useAuthStore()\n  const { skills } = cv.user.newData\n  const toast = useToast({ position: 'top-right' })\n  const initialRef = useRef(null)\n  const [activeIndex, setActiveIndex] = useState(null)\n  const [boilerplateObj] = useState({\n    company: '...',\n    task: '...',\n    technologies: '...',\n    responsibilities: '...',\n  })\n  const [localSkills, setLocalSkills] = useState([...skills])\n\n  const { text, onClose, onOpen, onChange, isOpen } = useModalEdit(localSkills)\n\n  useDetectChange() // tracks currentData vs cv.user.newData.skills\n\n  const handleSubmit = () => {\n    const current = text[activeIndex]\n    if (!current.company || !current.task || !current.responsibilities || !current.technologies) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      const updatedSkills = cv.user.newData.skills\n      setCurrentData({ section: 'strSkills', localData: updatedSkills })\n      onClose()\n    })\n  }\n\n  const handleEditClick = (index) => {\n    setActiveIndex(index)\n    onOpen()\n  }\n\n  const handleAddClick = () => {\n    const updateSkills = [...localSkills, boilerplateObj]\n\n    setLocalSkills(updateSkills)\n  }\n\n  const handleDelClick = useCallback(\n    (skill, index) => {\n      const getCheckCurrentData = () => {\n        const newSkills = (prev) => prev.filter((_, i) => i !== index)\n        setLocalSkills(newSkills)\n        setCurrentData({ section: 'strSkills', localData: newSkills })\n      }\n\n      if (skill._id) {\n        const { _id, email } = cv.user\n        try {\n          const promise = deleteSkillFromCv(_id, skill._id, email).then((result) => {\n            if (!result) {\n              return Promise.reject(new Error('Invalid response from server'))\n            }\n            return result\n          })\n          promiseBasedToastDel(toast, promise)\n\n          logError('Skill deleted')\n        } catch (error) {\n          logError(error('Error deleting skill', error))\n        }\n      } else {\n        getCheckCurrentData()\n      }\n    },\n    [cv.user, deleteSkillFromCv],\n  )\n\n  useEffect(() => {\n    // if something change with skills we put into the store before it works UI only\n    if (isArray(skills)) {\n      setLocalSkills(skills[0])\n    }\n    setLocalSkills(skills)\n    if (activeIndex === null) {\n      setCurrentData({ section: 'strSkills', localData: skills })\n    }\n  }, [skills])\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Flex direction=\"column\">\n        <Text as=\"b\" fontSize=\"larger\" pb=\"20px\">\n          Commercial Experience:\n        </Text>\n      </Flex>\n\n      {activeIndex !== null && (\n        <ModalEdit\n          isOpen={isOpen}\n          text={getObjectNoId(text[activeIndex])}\n          onSubmit={handleSubmit}\n          onChange={(e) => onChange(e, activeIndex)}\n          onClose={() => {\n            setActiveIndex(null)\n            onClose()\n          }}\n          initialRef={initialRef}\n        />\n      )}\n      {localSkills.map((item, index) => {\n        const objNoId = getObjectNoId(item)\n\n        return (\n          <Box key={item._id}>\n            <Flex\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              mb=\"20px\"\n              borderBottom=\"1px solid\"\n              borderColor=\"gray.200\"\n            >\n              <Box m={1}>{listItems(objNoId)}</Box>\n              <Box>\n                <Button sx={styleButton} bg=\"yellow.50\" size=\"sx\" onClick={() => handleEditClick(index)}>\n                  <MdEditNote />\n                </Button>\n                <Button sx={styleButton} bg=\"green.50\" size=\"sx\" onClick={() => handleAddClick(index)}>\n                  <MdOutlineNoteAdd />\n                </Button>\n                <Button sx={styleButton} bg=\"red.50\" size=\"sx\" onClick={() => handleDelClick(item, index)}>\n                  <MdOutlineDeleteForever />\n                </Button>\n              </Box>\n            </Flex>\n          </Box>\n        )\n      })}\n    </Flex>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport listItems from '../../../services/listItems'\nimport ModalEdit from './Modal/ModalEdit'\nimport styleButton from '../../../services/customStyles'\n\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\n\nconst PetInProgress = () => {\n  const { cv, putCvInfo, setCurrentData } = useAuthStore()\n  const { pet } = cv.user.newData\n  const { isOpen, onClose, onChange, text, onOpen } = useModalEdit(pet)\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (!pet.task || !pet.technologies || !pet.own || !pet.responsibilities) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strPet', localData: pet })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Pet-project:\n      </Text>\n      <Flex>\n        <Box>\n          <Box m={1}>{listItems(pet)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Box>\n          <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n            <MdEditNote />\n          </Button>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PetInProgress\n","import React from 'react'\nimport { Container } from '@chakra-ui/react'\n\nconst A4Container = ({ children }) => {\n  return (\n    <Container maxW=\"794px\" minH=\"1123px\" p={0} bg=\"white\">\n      {children}\n    </Container>\n  )\n}\n\nexport default A4Container\n","import React from 'react'\nimport { Flex } from '@chakra-ui/react'\n\nconst CardWrap = ({ children }) => {\n  return (\n    <Flex\n      direction=\"column\"\n      maxW=\"210mm\" // A4 width\n      minH=\"297mm\" // A4 height\n      boxShadow=\"md\" // Optional: add shadow for paper-like effect\n      bg=\"blue.50\"\n      align=\"center\"\n      justify=\"left\"\n      spacing=\"20px\" // Add some spacing between items\n      pl={20}\n      pr={10} // Add some padding right\n      pt={15} // Add some padding top\n      pb={15} // Add some padding bottom\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport default CardWrap\n","import React from 'react'\nimport { Button, Flex, Text, Tooltip, useToast, VStack } from '@chakra-ui/react'\nimport Lottie from 'react-lottie-player'\nimport { promiseBasedToast } from '../../../services/promiseBasedToast'\nimport useAuthStore from '../../../store/useAuthStore'\nimport { logError } from '../../../utils/services'\nimport done from '../../../animations/done.json'\n\nconst SendData = () => {\n  const toast = useToast({ position: 'top-right' })\n  const { accessToken, cv, user, pushCvText, hasChanged } = useAuthStore()\n\n  const handlerSendData = async (e) => {\n    e.preventDefault()\n\n    if (!accessToken) {\n      logError('Access token not available')\n      return\n    }\n\n    try {\n      const promise = pushCvText({ newData: cv.user.newData, email: user?.userData.email }).then((result) => {\n        // Search if result is valid\n        if (!result || !result.data) {\n          return Promise.reject(new Error('Invalid response from server'))\n        }\n        return result\n      })\n      promiseBasedToast(toast, promise)\n\n      logError('Note sent successfully')\n    } catch (error) {\n      logError(error)\n    }\n  }\n\n  return (\n    <VStack spacing={3} align=\"stretch\">\n      <Flex justify=\"space-around\">\n        <Text>Save CV</Text>\n        <Tooltip label={!hasChanged && 'Any text must be changed before saving!'} placement=\"left-start\">\n          <Button\n            colorScheme=\"blue\"\n            onClick={handlerSendData}\n            isDisabled={!hasChanged}\n            rightIcon={\n              hasChanged && <Lottie loop animationData={done} play={hasChanged} style={{ width: 50, height: 50 }} />\n            }\n          >\n            Save\n          </Button>\n        </Tooltip>\n      </Flex>\n    </VStack>\n  )\n}\n\nexport default SendData\n","import React from 'react'\nimport { Box, Button, Flex, Text } from '@chakra-ui/react'\nimport { MdEditNote } from 'react-icons/md'\nimport useAuthStore from '../../../store/useAuthStore'\nimport useModalEdit from '../../../utils/hooks/useModalEdit'\nimport ModalEdit from './Modal/ModalEdit'\nimport listItems from '../../../services/listItems'\nimport styleButton from '../../../services/customStyles'\nimport useDetectChange from '../../../utils/hooks/useDetectChange'\n\nconst Competencies = () => {\n  const { cv, putCvInfo, setCurrentData } = useAuthStore()\n  const { competencies } = cv.user.newData\n  // const [boilerplateObj] = useState({\n  //   language: '...',\n  //   ide: '...',\n  //   vcs: '...',\n  //   platform: '...',\n  //   tracking: '...',\n  //   db: '...',\n  //   technologies: '...',\n  // })\n  const { text, onClose, onOpen, onChange, isOpen } = useModalEdit(competencies)\n\n  useDetectChange()\n\n  const handleSubmit = () => {\n    if (\n      !competencies.lang ||\n      !competencies.ide ||\n      !competencies.vcs ||\n      !competencies.platform ||\n      !competencies.tracking ||\n      !competencies.db ||\n      !competencies.technologies\n    ) {\n      onClose()\n      return\n    }\n\n    putCvInfo(text, cv).then(() => {\n      setCurrentData({ section: 'strCompetencies', localData: competencies })\n      onClose()\n    })\n  }\n\n  return (\n    <Flex direction=\"column\" w=\"100%\" justifyContent=\"left\" pt=\"20px\">\n      <Text as=\"b\" fontSize=\"larger\" pb=\"10px\">\n        Competencies:\n      </Text>\n      <Flex justifyContent=\"space-between\">\n        <Box>\n          <Box m={1}>{listItems(competencies)}</Box>\n          <ModalEdit isOpen={isOpen} onSubmit={handleSubmit} text={text} onClose={onClose} onChange={onChange} />\n        </Box>\n        <Box>\n          <Button sx={styleButton} onClick={onOpen} size=\"sx\" bg=\"yellow.50\" _hover={{ bg: 'green.200' }}>\n            <MdEditNote />\n          </Button>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Competencies\n","import React, { useEffect } from 'react'\nimport Title from './Title'\nimport Contacts from './Contacts'\nimport Education from './Education'\nimport Skills from './Skills'\nimport PetInProgress from './PetInProgress'\n\nimport A4Container from '../Wrappers/A4Container'\nimport CardWrap from '../Wrappers/CardWrap'\nimport SendData from './SendData'\nimport useAuthStore from '../../../store/useAuthStore'\nimport Competencies from './Competencies'\n\nconst Cv = () => {\n  const { user, getCvInfo } = useAuthStore()\n  const { email } = user.userData\n\n  useEffect(() => {\n    getCvInfo(email).then()\n  }, [])\n\n  return (\n    <A4Container>\n      <SendData />\n      <Title />\n      <CardWrap>\n        <Contacts />\n        <Education />\n        <Competencies />\n        <PetInProgress />\n        <Skills />\n      </CardWrap>\n    </A4Container>\n  )\n}\n\nexport default Cv\n","import React from 'react'\nimport { Box, Button } from '@chakra-ui/react'\n// import { jsPDF } from 'jspdf'\nimport useAuthStore from '../../../store/useAuthStore'\nimport { logError } from '../../../utils/services'\nimport instance from '../../../utils/axios'\n\nconst CvPagePdf = () => {\n  const { cvPdfUp } = useAuthStore()\n\n  const handlerUrl = async () => {\n    try {\n      const blob = await cvPdfUp({ url: `${instance.defaults.baseURL}/cv` }) // just the payload\n      const pdfUrl = window.URL.createObjectURL(new Blob([blob], { type: 'application/pdf' }))\n\n      // Automatically download the PDF\n      const a = document.createElement('a')\n      a.href = pdfUrl\n      a.download = 'cv.pdf'\n      a.click()\n      a.remove()\n    } catch (error) {\n      logError('PDF response error:', error)\n    }\n  }\n\n  return (\n    <Box>\n      <Button onClick={handlerUrl}>PDF</Button>\n    </Box>\n  )\n}\n\nexport default CvPagePdf\n","import React, { useRef } from 'react'\nimport { Box, Button, Flex } from '@chakra-ui/react'\nimport { jsPDF } from 'jspdf'\nimport html2canvas from 'html2canvas'\nimport CvPagePdf from '../components/CvPagePdf'\n\nconst GeneratePdf = ({ children }) => {\n  const cvRef = useRef(null)\n\n  const generatePdf = async () => {\n    const element = cvRef.current\n    if (!element) return\n\n    // ---- Page settings: A4 @ 150 DPI (portrait) ----\n    const DPI = 150\n    const PAGE_W = 1240 // px\n    const PAGE_H = 1754 // px\n    const MARGIN = 60 // px on all sides inside the PDF page\n    const GUTTER = 24 // px gap between consecutive slices (prevents cutting a line)\n\n    // Render DOM -> canvas (approx. match dpi)\n    const canvas = await html2canvas(element, {\n      scale: DPI / 96, // ≈1.5625\n      useCORS: true,\n      backgroundColor: '#ffffff',\n    })\n\n    const imgWsrc = canvas.width\n    const imgHsrc = canvas.height\n\n    // eslint-disable-next-line new-cap\n    const pdf = new jsPDF({\n      orientation: 'p',\n      unit: 'px',\n      format: [PAGE_W, PAGE_H],\n      compress: true,\n    })\n\n    // We will draw each page at full inner width (page width minus margins)\n    const drawW = PAGE_W - 2 * MARGIN\n    const scale = drawW / imgWsrc // canvas px -> PDF inner px scale\n    const drawhPerSrc = (val) => val * scale\n\n    // How many source pixels tall can we show per page (after margins)?\n    const innerPageH = PAGE_H - 2 * MARGIN\n    const srcSliceH = Math.floor(innerPageH / scale) - GUTTER // convert back to source px\n\n    // Offscreen canvas used to crop each slice\n    const slice = document.createElement('canvas')\n    const sctx = slice.getContext('2d', { willReadFrequently: true })\n\n    let srcY = 0\n    let first = true\n\n    while (srcY < imgHsrc) {\n      const h = Math.min(srcSliceH, imgHsrc - srcY)\n\n      slice.width = imgWsrc\n      slice.height = h\n      sctx.clearRect(0, 0, slice.width, slice.height)\n      sctx.drawImage(canvas, 0, srcY, imgWsrc, h, 0, 0, imgWsrc, h)\n\n      const dataUrl = slice.toDataURL('image/jpeg', 0.95)\n\n      if (!first) pdf.addPage([PAGE_W, PAGE_H], 'p')\n      first = false\n\n      // Draw with margins on the PDF page\n      pdf.addImage(\n        dataUrl,\n        'JPEG',\n        MARGIN, // x\n        MARGIN, // y\n        drawW, // width inside margins\n        drawhPerSrc(h), // height scaled to fit\n      )\n\n      // Advance by the slice height plus a small gutter to avoid cutting the same baseline\n      srcY += h + GUTTER\n    }\n\n    pdf.save('my_cv.pdf')\n  }\n\n  return (\n    <Box p={4}>\n      <Flex justify=\"space-between\">\n        <Button colorScheme=\"teal\" onClick={generatePdf}>\n          Download PDF\n        </Button>\n        <CvPagePdf />\n      </Flex>\n      <Box ref={cvRef} mt={4}>\n        {children}\n      </Box>\n    </Box>\n  )\n}\n\nexport default GeneratePdf\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport Cv from './components/Cv'\nimport GeneratePdf from './Wrappers/GeneratePdf'\nimport Container from '../../layouts/Container'\nimport useAuthStore from '../../store/useAuthStore'\n\nconst CvDefault = () => {\n  const { accessToken } = useAuthStore()\n  return (\n    <GeneratePdf>\n      {accessToken ? (\n        <Cv />\n      ) : (\n        <Container>\n          <Box>Form of CV are available only to logged-in users.</Box>\n        </Container>\n      )}\n    </GeneratePdf>\n  )\n}\n\nexport default CvDefault\n"],"names":["promiseBasedToast","toast","promise","loading","title","description","success","error","promiseBasedToastDel","_ref","isOpen","onClose","onSubmit","text","onChange","initialRef","_jsxs","Modal","initialFocusRef","scrollBehavior","children","_jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","pb","Object","keys","map","item","index","FormControl","FormLabel","charAt","slice","Input","name","value","ref","placeholder","ModalFooter","Button","colorScheme","mr","onClick","initialText","setIsOpen","useState","setText","onOpen","useCallback","e","activeIndex","target","prev","Array","isArray","elem","idx","_objectSpread","useDetectChange","_cv$user7","currentData","setHasChanged","cv","useAuthStore","useEffect","section","_cv$user$newData$pet","_cv$user","_cv$user$newData","currentPet","user","newData","pet","changed","isEqual","localData","_cv$user$newData$educ","_cv$user2","_cv$user2$newData","currentEducation","education","_cv$user$newData$cont","_cv$user3","_cv$user3$newData","currentContacts","contacts","_cv$user$newData$titl","_cv$user4","_cv$user4$newData","currentTitles","_cv$user$newData$skil","_cv$user5","_cv$user5$newData","currentSkills","skills","_cv$user$newData$comp","_cv$user6","_cv$user6$newData","currentCompetencies","competencies","borderRadius","w","h","display","alignItems","justifyContent","border","borderColor","shadow","Title","putCvInfo","setCurrentData","useRef","useModalEdit","Box","mb","Flex","m","Heading","as","fontSize","fontWeight","posname","fullname","sx","styleButton","size","bg","_hover","MdEditNote","ModalEdit","handleSubmit","then","updatedTitles","str","toUpperCase","obj","entries","displayValue","toLowerCase","includes","test","href","concat","style","color","textDecoration","rel","Text","getFirstBigLetter","Contacts","listItems","email","linkedin","location","languages","Image","src","alt","maxWidth","height","Education","direction","pt","justify","diploma","course","filter","f","reduce","key","Skills","deleteSkillFromCv","useToast","position","setActiveIndex","boilerplateObj","company","task","technologies","responsibilities","localSkills","setLocalSkills","handleDelClick","skill","_id","result","Promise","reject","Error","logError","getCheckCurrentData","newSkills","_","i","getObjectNoId","current","updatedSkills","objNoId","borderBottom","handleEditClick","handleAddClick","updateSkills","MdOutlineNoteAdd","MdOutlineDeleteForever","PetInProgress","own","Container","maxW","minH","p","boxShadow","align","spacing","pl","pr","SendData","accessToken","pushCvText","hasChanged","VStack","Tooltip","label","placement","async","preventDefault","userData","data","isDisabled","rightIcon","Lottie","loop","animationData","done","play","width","Competencies","lang","ide","vcs","platform","tracking","db","Cv","getCvInfo","A4Container","CardWrap","CvPagePdf","cvPdfUp","blob","url","instance","defaults","baseURL","pdfUrl","window","URL","createObjectURL","Blob","type","a","document","createElement","download","click","remove","cvRef","element","PAGE_W","PAGE_H","canvas","html2canvas","scale","DPI","useCORS","backgroundColor","imgWsrc","imgHsrc","pdf","jsPDF","orientation","unit","format","compress","drawhPerSrc","val","srcSliceH","Math","floor","sctx","getContext","willReadFrequently","srcY","first","min","clearRect","drawImage","dataUrl","toDataURL","addPage","addImage","save","mt","CvDefault","GeneratePdf"],"sourceRoot":""}