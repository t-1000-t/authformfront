{"version":3,"file":"static/js/704.3b622c1d.chunk.js","mappings":"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","sources":["pages/Notes/components/STATUSES.jsx","pages/Notes/components/NoteContextMenu.jsx","pages/Notes/components/SortableNoteItem.jsx","pages/Notes/components/Notes.jsx","pages/Notes/index.jsx","services/promiseBasedToast.jsx"],"sourcesContent":["const STATUSES = [\n  { key: 'done', label: 'Done', colorScheme: 'red' },\n  { key: 'inProgress', label: 'In Progress', colorScheme: 'orange' },\n  { key: 'new', label: 'New', colorScheme: 'green' },\n]\n\nexport default STATUSES\n","import React, { useEffect, useRef } from 'react'\nimport { Box, Button, VStack, useOutsideClick } from '@chakra-ui/react'\nimport STATUSES from './STATUSES'\n\nconst NoteContextMenu = ({ x, y, closeMenu, onSelect }) => {\n  const ref = useRef(null)\n\n  useOutsideClick({ ref, handler: closeMenu })\n\n  useEffect(() => {\n    const onKey = (e) => e.key === 'Escape' && closeMenu()\n    window.addEventListener('keydown', onKey)\n    return () => window.removeEventListener('keydown', onKey)\n  }, [closeMenu])\n\n  return (\n    <Box\n      ref={ref}\n      position=\"fixed\"\n      top={y}\n      left={x}\n      zIndex=\"popover\"\n      bg=\"white\"\n      borderWidth=\"1px\"\n      rounded=\"md\"\n      shadow=\"lg\"\n      p={2}\n      minW=\"180px\"\n    >\n      <VStack align=\"stretch\" spacing={1}>\n        {STATUSES.map((s) => (\n          <Button key={s.key} variant=\"ghost\" justifyContent=\"flex-start\" onClick={() => onSelect?.(s.key)}>\n            {s.label}\n          </Button>\n        ))}\n        <Button variant=\"ghost\" justifyContent=\"flex-start\" onClick={closeMenu}>\n          Cancel\n        </Button>\n      </VStack>\n    </Box>\n  )\n}\n\nexport default NoteContextMenu\n","import React, { useState } from 'react'\nimport { Badge, Box, Button, Flex, IconButton, ListIcon, ListItem, Spacer } from '@chakra-ui/react'\nimport { MdCheckCircle, MdOutlineRestoreFromTrash } from 'react-icons/md'\nimport { useSortable } from '@dnd-kit/sortable'\nimport { CSS } from '@dnd-kit/utilities'\nimport { GripVertical } from 'lucide-react'\nimport NoteContextMenu from './NoteContextMenu'\nimport STATUSES from './STATUSES'\n\nconst SortableNoteItem = ({ item, onDelete }) => {\n  const { setActivatorNodeRef, attributes, listeners, setNodeRef, transform, transition, isDragging } = useSortable({\n    id: item._id,\n  })\n\n  const [menu, setMenu] = useState({ open: false, x: 0, y: 0 })\n  const [statusRow, setStatusRow] = useState(null)\n\n  const openMenu = (e) => {\n    e.preventDefault()\n    setMenu({ open: true, x: e.clientX, y: e.clientY })\n  }\n  const closeMenu = () => setMenu((m) => ({ ...m, open: false }))\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n    // subtle visual while dragging\n    boxShadow: isDragging ? '0 8px 24px rgba(0,0,0,0.15)' : undefined,\n    background: isDragging ? 'rgba(0,0,0,0.02)' : undefined,\n    borderRadius: '12px',\n  }\n\n  const handleSelectStatus = (stringStatus) => {\n    setStatusRow(STATUSES.find((s) => s.key === stringStatus))\n    // TODO: call parent callback to persist\n    // onChangeStatus?.(item._id, statusKey)\n    // optionally update local UI if you keep local state\n    closeMenu()\n  }\n\n  return (\n    <ListItem ref={setNodeRef} style={style}>\n      <Flex align=\"center\" gap={1} p={1}>\n        {/* Drag handle: keyboard + pointer */}\n        <IconButton\n          ref={setActivatorNodeRef}\n          aria-label=\"Drag to reorder\"\n          variant=\"solid\"\n          size=\"sm\"\n          {...attributes}\n          {...listeners}\n          icon={<GripVertical size={18} />}\n          cursor=\"grab\"\n          _active={{ cursor: 'grabbing' }}\n        />\n\n        <Box flex=\"1\" wordBreak=\"break-word\" onClick={openMenu}>\n          {statusRow && (\n            <Badge mr={2} colorScheme={statusRow.colorScheme}>\n              {statusRow.label}\n            </Badge>\n          )}\n          <ListIcon as={MdCheckCircle} color=\"green.500\" />\n          {item.text}\n        </Box>\n        <Spacer />\n        <Button\n          size=\"sm\"\n          height=\"28px\"\n          width=\"100px\"\n          border=\"1px\"\n          borderColor=\"red.500\"\n          leftIcon={<MdOutlineRestoreFromTrash size={14} />}\n          onClick={onDelete}\n        >\n          Delete\n        </Button>\n\n        {menu.open && (\n          <NoteContextMenu\n            x={menu.x}\n            y={menu.y}\n            openMenu={openMenu}\n            closeMenu={closeMenu}\n            onSelect={handleSelectStatus}\n          />\n        )}\n      </Flex>\n    </ListItem>\n  )\n}\n\nexport default SortableNoteItem\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { Box, Button, FormControl, Heading, List, Stack, Textarea, useToast } from '@chakra-ui/react'\nimport { motion } from 'framer-motion'\nimport { DndContext, useSensors, useSensor, PointerSensor, KeyboardSensor, closestCenter } from '@dnd-kit/core'\nimport { restrictToParentElement, restrictToVerticalAxis } from '@dnd-kit/modifiers'\nimport { arrayMove, SortableContext, verticalListSortingStrategy } from '@dnd-kit/sortable'\nimport useAuthStore from '../../../store/useAuthStore'\nimport Container from '../../../layouts/Container'\nimport { logError } from '../../../utils/services'\nimport { promiseBasedToast, promiseBasedToastDel } from '../../../services/promiseBasedToast'\nimport SortableNoteItem from './SortableNoteItem'\n\nconst MotionButton = motion(Button)\n\n// Keep this in sync with the value used by your GuestLayout/GuestFooter\nconst FOOTER_HEIGHT_PX = 80\n\nconst Notes = () => {\n  const { getDataNotes, noteText, deleteNote, accessToken, user, listUp, setNoteList, setGlobalLoading } =\n    useAuthStore()\n  const toast = useToast({ position: 'top-right' })\n  const email = user?.userData?.email\n  const [value, setValue] = useState('')\n  const [viewList, setViewList] = useState([])\n\n  useEffect(() => {\n    setViewList([...(listUp ?? [])].toReversed())\n  }, [listUp])\n\n  const getNotes = useCallback(async () => {\n    try {\n      const result = await getDataNotes(email)\n      const { notes } = result\n      setNoteList(notes)\n      setGlobalLoading(true) // TODO It Appears any time after del row Notes\n      return result\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }, [email, getDataNotes, setNoteList, setGlobalLoading])\n\n  useEffect(() => {\n    if (email) getNotes().then()\n  }, [email, getNotes])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!accessToken) return logError('Access token not available')\n\n    try {\n      const promise = noteText({ text: value, email }).then((result) => {\n        if (!result || !result.data) return Promise.reject(new Error('Invalid response from server'))\n        return result\n      })\n      promiseBasedToast(toast, promise)\n      setValue('')\n      return null\n    } catch (error) {\n      logError(error)\n      return null\n    }\n  }\n\n  const handleDelete = async (id) => {\n    if (!accessToken) return logError('Access token not available')\n    setGlobalLoading(true)\n    try {\n      const promise = deleteNote(id)\n        .then((result) => {\n          if (result.status === 200) return getNotes()\n          return result\n        })\n        .finally(() => setGlobalLoading(false))\n      promiseBasedToastDel(toast, promise)\n    } catch (e) {\n      setGlobalLoading(false)\n      logError(e)\n    }\n    return null\n  }\n\n  const handleCombineKeysDownUp = (e) => {\n    if (e.key === 'Enter' && e.shiftKey) {\n      e.preventDefault()\n      handleSubmit(e)\n    }\n  }\n\n  return (\n    <Container\n      // Make this page a flex column that can shrink, so the list area can become a scroller\n      display=\"flex\"\n      flexDirection=\"column\"\n      h=\"100%\"\n      minH={0} // <— important in flex layouts\n      maxW=\"6xl\"\n      py={14}\n      px={{ base: 6, md: 12 }}\n    >\n      <form onSubmit={handleSubmit}>\n        <Box position=\"relative\" maxW=\"850px\" mx=\"auto\" mb={{ base: 4, md: 16 }}>\n          <Heading fontSize={{ base: '3xl', md: '4xl', lg: '6xl' }} textAlign=\"center\" color=\"#204E78\">\n            LIST of MY NOTES\n          </Heading>\n          <FormControl>\n            <Textarea\n              onKeyDown={handleCombineKeysDownUp}\n              value={value}\n              placeholder=\"Please, write some note\"\n              onChange={(e) => setValue(e.target.value)}\n              size=\"sm\"\n            />\n          </FormControl>\n          <Stack spacing={10}>\n            <MotionButton colorScheme=\"teal\" type=\"submit\" whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n              Submit\n            </MotionButton>\n          </Stack>\n        </Box>\n      </form>\n\n      {/* This Box is the ONLY scroller on the page for the notes list */}\n      <Box\n        mt={4}\n        flex=\"1 1 auto\"\n        minH={0} // <— lets it shrink and overflow in flex\n        overflowY=\"auto\"\n        pr=\"20px\"\n        pb={`${FOOTER_HEIGHT_PX}px`} // <— prevents last items hiding behind the fixed footer\n        sx={{ overscrollBehavior: 'contain' }}\n      >\n        <DndContext\n          sensors={useSensors(\n            useSensor(PointerSensor, { activationConstraint: { distance: 8 } }),\n            useSensor(KeyboardSensor),\n          )}\n          collisionDetection={closestCenter}\n          modifiers={[restrictToVerticalAxis, restrictToParentElement]}\n          onDragEnd={({ active, over }) => {\n            if (!over || active.id === over.id) return\n            const items = viewList ?? []\n            const oldIndex = items.findIndex((n) => n._id === active.id)\n            const newIndex = items.findIndex((n) => n._id === over.id)\n            if (oldIndex === -1 || newIndex === -1) return\n\n            const reorderedView = arrayMove(items, oldIndex, newIndex)\n            setViewList(reorderedView)\n            // store back in original order\n            // setNoteList(reorderedView.slice().reverse())\n\n            // TODO: persist: api.patch('/notes/reorder', reorderedView.map(n => n._id))\n          }}\n        >\n          <SortableContext items={viewList.map((n) => n._id)} strategy={verticalListSortingStrategy}>\n            <List spacing={1}>\n              {viewList.map((item) => (\n                <SortableNoteItem key={item._id} item={item} onDelete={() => handleDelete(item._id)} />\n              ))}\n            </List>\n          </SortableContext>\n        </DndContext>\n      </Box>\n    </Container>\n  )\n}\n\nexport default Notes\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport Container from '../../layouts/Container'\nimport Page from '../../components/Page'\nimport Notes from './components/Notes'\nimport useAuthStore from '../../store/useAuthStore'\n\nconst NotesDefault = () => {\n  const { accessToken } = useAuthStore()\n\n  return (\n    <Page>\n      <Box bg=\"white\">\n        {accessToken ? (\n          <Notes />\n        ) : (\n          <Container>\n            <Box>Notes are available only to logged-in users.</Box>\n          </Container>\n        )}\n      </Box>\n    </Page>\n  )\n}\n\nexport default NotesDefault\n","const promiseBasedToast = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Saving...', description: 'Please wait' },\n    success: { title: 'It has saved!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to save', description: 'Something went wrong.' },\n  })\n}\n\nconst promiseBasedToastDel = (toast, promise) => {\n  return toast.promise(promise, {\n    loading: { title: 'Deleting...', description: 'Please wait' },\n    success: { title: 'It has deleted!', description: 'Your data was saved successfully.' },\n    error: { title: 'Failed to delete', description: 'Something went wrong.' },\n  })\n}\n\nexport { promiseBasedToast, promiseBasedToastDel }\n"],"names":["key","label","colorScheme","_ref","x","y","closeMenu","onSelect","ref","useRef","useOutsideClick","handler","useEffect","onKey","e","window","addEventListener","removeEventListener","_jsx","Box","position","top","left","zIndex","bg","borderWidth","rounded","shadow","p","minW","children","_jsxs","VStack","align","spacing","STATUSES","map","s","Button","variant","justifyContent","onClick","item","onDelete","setActivatorNodeRef","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","id","_id","menu","setMenu","useState","open","statusRow","setStatusRow","openMenu","preventDefault","clientX","clientY","m","_objectSpread","style","CSS","Transform","toString","boxShadow","undefined","background","borderRadius","ListItem","Flex","gap","IconButton","size","icon","GripVertical","cursor","_active","flex","wordBreak","Badge","mr","ListIcon","as","MdCheckCircle","color","text","Spacer","height","width","border","borderColor","leftIcon","MdOutlineRestoreFromTrash","NoteContextMenu","stringStatus","find","MotionButton","motion","Notes","_user$userData","getDataNotes","noteText","deleteNote","accessToken","user","listUp","setNoteList","setGlobalLoading","useAuthStore","toast","useToast","email","userData","value","setValue","viewList","setViewList","toReversed","getNotes","useCallback","async","result","notes","error","logError","then","handleSubmit","promise","data","Promise","reject","Error","promiseBasedToast","Container","display","flexDirection","h","minH","maxW","py","px","base","md","onSubmit","mx","mb","Heading","fontSize","lg","textAlign","FormControl","Textarea","onKeyDown","shiftKey","placeholder","onChange","target","Stack","type","whileHover","scale","whileTap","mt","overflowY","pr","pb","concat","sx","overscrollBehavior","DndContext","sensors","useSensors","useSensor","PointerSensor","activationConstraint","distance","KeyboardSensor","collisionDetection","closestCenter","modifiers","restrictToVerticalAxis","restrictToParentElement","onDragEnd","active","over","items","oldIndex","findIndex","n","newIndex","reorderedView","arrayMove","SortableContext","strategy","verticalListSortingStrategy","List","SortableNoteItem","status","finally","promiseBasedToastDel","handleDelete","NotesDefault","Page","loading","title","description","success"],"sourceRoot":""}