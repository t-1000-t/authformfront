{"version":3,"file":"static/js/450.4f72af77.chunk.js","mappings":"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","sources":["pages/Game/P5/components/Player.js","pages/Game/P5/components/Wall.js","pages/Game/P5/components/Enemy.js","pages/Game/P5/components/GamePageP5.jsx","pages/Game/P5/index.jsx"],"sourcesContent":["const RUN_SPEED = -25\nconst WALK_SPEED = -10\nconst MOUSE_SENSITIVITY = 0.0001\nconst CAM_X = 100\nconst CAM_Y = -75\nconst CAM_Z = 50\n\nclass Player {\n  constructor(x, z) {\n    this.x = x\n    this.z = z\n    this.direction = -1\n    this.isMovingForward = false\n    this.isRunning = false\n    this.isStrafingLeft = false\n    this.isStrafingRight = false\n  }\n\n  moveForward(walls) {\n    let dx = 0\n    let dz = 0\n    const speed = this.isRunning ? RUN_SPEED : WALK_SPEED\n\n    if (this.isMovingForward) {\n      dx += Math.sin(this.direction) * speed\n      dz += Math.cos(this.direction) * speed\n    }\n    if (this.isStrafingLeft) {\n      dx += Math.sin(this.direction - Math.PI / 2) * WALK_SPEED\n      dz += Math.cos(this.direction - Math.PI / 2) * WALK_SPEED\n    }\n    if (this.isStrafingRight) {\n      dx += Math.sin(this.direction + Math.PI / 2) * WALK_SPEED\n      dz += Math.cos(this.direction + Math.PI / 2) * WALK_SPEED\n    }\n\n    const newX = this.x + dx\n    const newZ = this.z + dz\n\n    if (!Player.checkCollision(newX, newZ, walls)) {\n      this.x = newX\n      this.z = newZ\n    }\n  }\n\n  static checkCollision(x, z, walls) {\n    return walls.some((wall) => {\n      const inX = x > wall.x - wall.w / 2 && x < wall.x + wall.w / 2\n      const inZ = z > wall.z - wall.d / 2 && z < wall.z + wall.d / 2\n      return inX && inZ\n    })\n  }\n\n  turnTowardsMouse(p) {\n    const noTurnZoneStart = (p.width * 2) / 5\n    const noTurnZoneEnd = (p.width * 3) / 5\n    if (p.mouseX < 0 || p.mouseX > p.width || p.mouseY < 0 || p.mouseY > p.height) return\n    if (p.mouseX < noTurnZoneStart || p.mouseX > noTurnZoneEnd) {\n      const mouseDelta = p.mouseX - p.width / 2\n      this.direction -= mouseDelta * MOUSE_SENSITIVITY\n    }\n  }\n\n  updateCamera(p) {\n    const camX = this.x + Math.sin(this.direction) * CAM_X\n    const camZ = this.z + Math.cos(this.direction) * CAM_Z\n    const lookX = this.x - Math.sin(this.direction)\n    const lookZ = this.z - Math.cos(this.direction)\n    p.camera(camX, CAM_Y, camZ, lookX, CAM_Y, lookZ, 0, 1, 0)\n  }\n}\n\nexport default Player\n","class Wall {\n  constructor(x, z, w, h, d) {\n    this.x = x\n    this.z = z\n    this.w = w\n    this.h = h\n    this.d = d\n  }\n\n  display(p, texture) {\n    p.push()\n    p.translate(this.x, -this.h / 2, this.z)\n    p.texture(texture)\n    p.box(this.w, this.h, this.d)\n    p.pop()\n  }\n}\n\nexport default Wall\n","class Enemy {\n  constructor(x, z) {\n    this.x = x\n    this.z = z\n    this.r = 50\n  }\n\n  display(p) {\n    p.push()\n    p.noStroke()\n    p.translate(this.x, -this.r, this.z)\n    p.fill('red')\n    p.sphere(this.r)\n    p.pop()\n  }\n}\n\nexport default Enemy\n","import React, { useRef, useEffect, useCallback, useState } from 'react'\nimport Sketch from 'react-p5'\nimport brickImg from '../../../../assets/bricks.png'\nimport robotoFont from '../../../../assets/fonts/Roboto_Condensed-Regular.ttf'\nimport Player from './Player'\nimport Wall from './Wall'\nimport Enemy from './Enemy'\n\nconst GRID_SIZE = 150\n\nconst GAME_MAP = [\n  'XXXXXXXXXXXXXXXX XXXXXXXXX',\n  'X                 e      X',\n  'X               p        X',\n  'X       XXXXXXX   X X    X',\n  'X       X           X    X',\n  'X       X   XX  X   X    X',\n  'X       X   Xe  X   X    X X',\n  'X           X XXX   X       eXX',\n  'X       X           X         X',\n  'X       XXXXXXXXXXXXX         X',\n  'X    e                        X',\n  'X                             X',\n  'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX',\n]\n\nconst GamePageP5 = () => {\n  const wallTexture = useRef(null)\n  const walls = useRef([])\n  const enemies = useRef([])\n  const fontRef = useRef(null)\n  // const player = usePlayer()\n  const player = useRef(null)\n  const [isLoading, setIsLoading] = useState(true)\n\n  const setup = (p, canvasParentRef) => {\n    p.createCanvas(690, 450, p.WEBGL).parent(canvasParentRef)\n    p.cursor(p.CROSS)\n    fontRef.current = p.loadFont(robotoFont, () => {\n      wallTexture.current = p.loadImage(brickImg, () => {\n        // Image loaded callback\n        setIsLoading(false) // Set loading to false when the image is loaded\n      })\n    })\n\n    // Build game map\n    for (let z = 0; z < GAME_MAP.length; z += 1) {\n      for (let x = 0; x < GAME_MAP[z].length; x += 1) {\n        const tile = GAME_MAP[z][x]\n        const worldX = (x - GAME_MAP[z].length / 2) * GRID_SIZE\n        const worldZ = (z - GAME_MAP.length / 2) * GRID_SIZE\n\n        switch (tile) {\n          case 'p':\n            player.current = new Player(worldX, worldZ)\n            break\n          case 'e':\n            enemies.current.push(new Enemy(worldX, worldZ, p))\n            break\n          case 'X':\n            walls.current.push(new Wall(worldX, worldZ, GRID_SIZE, 200, GRID_SIZE, p))\n            break\n          default:\n            break\n        }\n      }\n    }\n  }\n\n  const drawFloor = useCallback((p) => {\n    p.push()\n    p.noStroke()\n    p.fill('mediumseagreen')\n    p.translate(0, 0, 0)\n    p.rotateX(p.HALF_PI)\n    p.plane(p.width * 10, p.height * 10)\n    p.pop()\n  }, [])\n\n  const draw = (p) => {\n    if (isLoading) {\n      p.background('lightgrey')\n      if (fontRef.current) {\n        p.textFont(fontRef.current)\n      }\n      p.textSize(32)\n      p.textAlign(p.CENTER, p.CENTER)\n      p.fill('black')\n      p.text('Loading...', p.width / 2, p.height / 2)\n      return\n    }\n\n    p.background('deepskyblue')\n    p.ambientLight(150)\n    p.directionalLight(180, 180, 180, 0, 0, -1)\n\n    drawFloor(p)\n\n    walls.current.forEach((wall) => wall.display(p, wallTexture.current))\n\n    if (player.current) {\n      player.current.turnTowardsMouse(p)\n      player.current.moveForward(walls.current)\n      player.current.updateCamera(p)\n    }\n\n    enemies.current.forEach((enemy) => enemy.display(p))\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!player.current) return\n      if (e.key === 'w') player.current.isMovingForward = true\n      if (e.key === 'Shift') player.current.isRunning = true\n      if (e.key === 'd') player.current.isStrafingLeft = true\n      if (e.key === 'a') player.current.isStrafingRight = true\n    }\n\n    const handleKeyUp = (e) => {\n      if (!player.current) return\n      if (e.key === 'w') player.current.isMovingForward = false\n      if (e.key === 'Shift') player.current.isRunning = false\n      if (e.key === 'd') player.current.isStrafingLeft = false\n      if (e.key === 'a') player.current.isStrafingRight = false\n    }\n\n    window.addEventListener('keydown', handleKeyDown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [])\n\n  return <Sketch setup={setup} draw={draw} />\n}\n\nexport default GamePageP5\n","import React from 'react'\nimport { Center } from '@chakra-ui/react'\nimport GamePageP5 from './components/GamePageP5'\nimport Page from '../../../components/Page'\nimport Container from '../../../layouts/Container'\n\nconst GameDefault = () => {\n  return (\n    <Center>\n      <Container>\n        <Page>\n          <GamePageP5 />\n        </Page>\n      </Container>\n    </Center>\n  )\n}\n\nexport default GameDefault\n"],"names":["WALK_SPEED","Player","constructor","x","z","this","direction","isMovingForward","isRunning","isStrafingLeft","isStrafingRight","moveForward","walls","dx","dz","speed","Math","sin","cos","PI","newX","newZ","checkCollision","some","wall","inX","w","inZ","d","turnTowardsMouse","p","noTurnZoneStart","width","noTurnZoneEnd","mouseX","mouseY","height","mouseDelta","updateCamera","camX","camZ","lookX","lookZ","camera","h","display","texture","push","translate","box","pop","r","noStroke","fill","sphere","GRID_SIZE","GAME_MAP","GamePageP5","wallTexture","useRef","enemies","fontRef","player","isLoading","setIsLoading","useState","drawFloor","useCallback","rotateX","HALF_PI","plane","useEffect","handleKeyDown","e","current","key","handleKeyUp","window","addEventListener","removeEventListener","_jsx","Sketch","setup","canvasParentRef","createCanvas","WEBGL","parent","cursor","CROSS","loadFont","robotoFont","loadImage","brickImg","length","tile","worldX","worldZ","Enemy","Wall","draw","background","textFont","textSize","textAlign","CENTER","text","ambientLight","directionalLight","forEach","enemy","GameDefault","Center","children","Container","Page"],"sourceRoot":""}